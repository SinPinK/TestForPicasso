{"version":3,"file":"helpers.js","names":["getTabsDirection","linePosition","getTabsWidth","tabsDimensions","reduce","acc","td","size","gap"],"sources":["../../../../../src/components/TabsDeprecated/helpers.ts"],"sourcesContent":["import React from 'react';\n\nimport { TabsPropGetLabel, TabsPropLinePosition } from './TabsDeprecated';\n\nexport type TabDimensions = {\n  size: number;\n  gap: number;\n};\n\nexport type TabsFitModeWrapperProps<ITEM> = {\n  items: ITEM[];\n  tabsDimensions: TabDimensions[];\n  getLabel: TabsPropGetLabel<ITEM>;\n  getChecked: (item: ITEM) => boolean;\n  renderItem: (item: ITEM) => React.ReactNode;\n  renderItemsList: RenderItemsListProp;\n  tabRefs: Array<React.RefObject<HTMLElement>>;\n};\n\nexport type RenderItemsListProp = (props: {\n  withRunningLine?: boolean;\n  getTabClassName?: (idx: number) => string | undefined;\n}) => React.ReactNode;\n\nexport type TabsDirection = 'horizontal' | 'vertical';\n\nexport const getTabsDirection = (\n  linePosition: TabsPropLinePosition,\n): TabsDirection =>\n  linePosition === 'left' || linePosition === 'right'\n    ? 'vertical'\n    : 'horizontal';\n\nexport const getTabsWidth = (tabsDimensions: TabDimensions[]): number =>\n  tabsDimensions.reduce((acc, td) => acc + td.size + td.gap, 0);\n"],"mappings":"AA0BA,MAAO,IAAMA,iBAAgB,CAAG,SAC9BC,CAD8B,QAGb,MAAjB,GAAAA,CAAY,EAAgC,OAAjB,GAAAA,CAA3B,CACI,UADJ,CAEI,YAL0B,CAAzB,CAOP,MAAO,IAAMC,aAAY,CAAG,SAACC,CAAD,QAC1BA,EAAc,CAACC,MAAf,CAAsB,SAACC,CAAD,CAAMC,CAAN,QAAaD,EAAG,CAAGC,CAAE,CAACC,IAAT,CAAgBD,CAAE,CAACE,GAAhC,CAAtB,CAA2D,CAA3D,CAD0B,CAArB"}