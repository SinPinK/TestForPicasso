{"version":3,"file":"useIMask.js","names":["IMask","useCallback","useEffect","useRef","useMutableRef","useIMask","props","value","maskOptions","onChange","inputRef","imaskRef","handleChanheRef","onAcept","e","current","options","mask","updateOptions","el","updateValue","on","off","destroy"],"sources":["../../../../../src/components/TextField/useIMask.ts"],"sourcesContent":["import IMask from 'imask';\nimport { useCallback, useEffect, useRef } from 'react';\n\nimport { useMutableRef } from '##/hooks/useMutableRef';\n\ntype Props<MASK extends IMask.AnyMaskedOptions> = {\n  value: string | null;\n  onChange?: (\n    value: string | null,\n    params: { e: Event; value: string | null },\n  ) => void;\n  maskOptions: string | MASK;\n};\nexport function useIMask<MASK extends IMask.AnyMaskedOptions>(\n  props: Props<MASK>,\n) {\n  const { value, maskOptions, onChange } = props;\n  const inputRef = useRef<HTMLInputElement>(null);\n  const imaskRef = useRef<IMask.InputMask<MASK> | null>(null);\n  const handleChanheRef = useMutableRef(onChange);\n\n  // Нужно для синхранизации value c Imask,\n  // так как value мы можем задать через пропс без самого ввода,\n  // и Imask требует ручной синхронихации в этом случае\n  const onAcept = useCallback((e: Event) => {\n    const value = imaskRef.current?.value || null;\n    handleChanheRef.current?.(value, { e, value });\n  }, []);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      const options = (\n        typeof maskOptions === 'string' ? { mask: maskOptions } : maskOptions\n      ) as MASK;\n      if (imaskRef.current) {\n        imaskRef.current.updateOptions(options);\n      } else {\n        imaskRef.current = IMask(inputRef.current, options);\n      }\n    }\n  }, [inputRef.current, maskOptions]);\n\n  useEffect(() => {\n    if (imaskRef.current && inputRef.current && imaskRef.current.el) {\n      imaskRef.current.updateValue();\n    }\n  }, [value]);\n\n  useEffect(() => {\n    imaskRef.current?.on('accept', onAcept);\n    return () => {\n      imaskRef.current?.off('accept', onAcept);\n    };\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      imaskRef.current?.destroy();\n    };\n  }, []);\n\n  return {\n    inputRef,\n    imaskRef,\n  };\n}\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,SAAtB,CAAiCC,MAAjC,KAA+C,OAA/C,CAEA,OAASC,aAAT,iCAUA,MAAO,SAASC,SAAT,CACLC,CADK,CAEL,IACQC,EADR,CACyCD,CADzC,CACQC,KADR,CACeC,CADf,CACyCF,CADzC,CACeE,WADf,CAC4BC,CAD5B,CACyCH,CADzC,CAC4BG,QAD5B,CAEMC,CAAQ,CAAGP,MAAM,CAAmB,IAAnB,CAFvB,CAGMQ,CAAQ,CAAGR,MAAM,CAA+B,IAA/B,CAHvB,CAIMS,CAAe,CAAGR,aAAa,CAACK,CAAD,CAJrC,CASMI,CAAO,CAAGZ,WAAW,CAAC,SAACa,CAAD,CAAc,SAClCP,CAAK,CAAG,WAAAI,CAAQ,CAACI,OAAT,uBAAkBR,KAAlB,GAA2B,IADD,WAExCK,CAAe,CAACG,OAFwB,qBAExC,OAAAH,CAAe,CAAWL,CAAX,CAAkB,CAAEO,CAAC,CAADA,CAAF,CAAKP,KAAK,CAALA,CAAL,CAAlB,CAChB,CAH0B,CAGxB,EAHwB,CAT3B,CA8CA,MAhCAL,UAAS,CAAC,UAAM,CACd,GAAIQ,CAAQ,CAACK,OAAb,CAAsB,CACpB,GAAMC,EAAO,CACY,QAAvB,QAAOR,EAAP,CAAkC,CAAES,IAAI,CAAET,CAAR,CAAlC,CAA0DA,CAD5D,CAGIG,CAAQ,CAACI,OAJO,CAKlBJ,CAAQ,CAACI,OAAT,CAAiBG,aAAjB,CAA+BF,CAA/B,CALkB,CAOlBL,CAAQ,CAACI,OAAT,CAAmBf,KAAK,CAACU,CAAQ,CAACK,OAAV,CAAmBC,CAAnB,CAE3B,CACF,CAXQ,CAWN,CAACN,CAAQ,CAACK,OAAV,CAAmBP,CAAnB,CAXM,CAgCT,CAnBAN,SAAS,CAAC,UAAM,CACVS,CAAQ,CAACI,OAAT,EAAoBL,CAAQ,CAACK,OAA7B,EAAwCJ,CAAQ,CAACI,OAAT,CAAiBI,EAD/C,EAEZR,CAAQ,CAACI,OAAT,CAAiBK,WAAjB,EAEH,CAJQ,CAIN,CAACb,CAAD,CAJM,CAmBT,CAbAL,SAAS,CAAC,UAAM,OAEd,iBADAS,CAAQ,CAACI,OACT,qBADA,EAAkBM,EAAlB,CAAqB,QAArB,CAA+BR,CAA/B,CACA,CAAO,UAAM,iBACXF,CAAQ,CAACI,OADE,qBACX,EAAkBO,GAAlB,CAAsB,QAAtB,CAAgCT,CAAhC,CACD,CACF,CALQ,CAKN,EALM,CAaT,CANAX,SAAS,CAAC,UAAM,CACd,MAAO,WAAM,iBACXS,CAAQ,CAACI,OADE,qBACX,EAAkBQ,OAAlB,EACD,CACF,CAJQ,CAIN,EAJM,CAMT,CAAO,CACLb,QAAQ,CAARA,CADK,CAELC,QAAQ,CAARA,CAFK,CAIR"}