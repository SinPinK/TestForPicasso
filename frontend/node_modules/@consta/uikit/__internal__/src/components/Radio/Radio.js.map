{"version":3,"file":"Radio.js","names":["React","useRef","useForkRef","cnMixFocus","cn","usePropsHandler","radioPropSize","radioPropSizeDefault","radioPropView","radioPropViewDefault","radioPropAlign","radioPropAlignDefault","cnRadio","COMPONENT_NAME","Radio","forwardRef","props","ref","radioRef","checked","name","size","view","align","disabled","className","label","onChange","onFocus","onBlur","readOnly","required","step","tabIndex","inputId","inputRef","otherProps","handleChange","e"],"sources":["../../../../../src/components/Radio/Radio.tsx"],"sourcesContent":["import './Radio.css';\n\nimport React, { ChangeEventHandler, useRef } from 'react';\n\nimport { useForkRef } from '../../hooks/useForkRef/useForkRef';\nimport { cnMixFocus } from '../../mixs/MixFocus/MixFocus';\nimport { cn } from '../../utils/bem';\nimport { PropsWithHTMLAttributes } from '../../utils/types/PropsWithHTMLAttributes';\nimport { usePropsHandler } from '../EventInterceptor/usePropsHandler';\n\nexport const radioPropSize = ['m', 'l', 's', 'xs'] as const;\nexport type RadioPropSize = typeof radioPropSize[number];\nexport const radioPropSizeDefault: RadioPropSize = radioPropSize[0];\n\nexport const radioPropView = ['primary', 'ghost'] as const;\nexport type RadioPropView = typeof radioPropView[number];\nexport const radioPropViewDefault: RadioPropView = radioPropView[0];\n\nexport const radioPropAlign = ['center', 'top'] as const;\nexport type RadioPropAlign = typeof radioPropAlign[number];\nexport const radioPropAlignDefault: RadioPropAlign = radioPropAlign[0];\n\nexport type RadioPropOnChange = (object: {\n  e: React.ChangeEvent<HTMLInputElement>;\n  checked: boolean;\n}) => void;\n\nexport type Props = {\n  checked?: boolean;\n  size?: RadioPropSize;\n  view?: RadioPropView;\n  align?: RadioPropAlign;\n  disabled?: boolean;\n  className?: string;\n  label?: string;\n  onChange?: RadioPropOnChange;\n  name?: string;\n  onFocus?: React.FocusEventHandler<HTMLInputElement>;\n  onBlur?: React.FocusEventHandler<HTMLInputElement>;\n  autoFocus?: boolean;\n  readOnly?: boolean;\n  required?: boolean;\n  step?: number | string;\n  tabIndex?: number;\n  inputRef?: React.Ref<HTMLInputElement>;\n  children?: never;\n  for?: string;\n  inputId?: string;\n};\n\nexport type RadioProps = PropsWithHTMLAttributes<Props, HTMLLabelElement>;\n\nexport const cnRadio = cn('Radio');\n\nexport const COMPONENT_NAME = 'Radio' as const;\n\nexport const Radio = React.forwardRef<HTMLLabelElement, RadioProps>(\n  (props, ref) => {\n    const radioRef = useRef<HTMLLabelElement>(null);\n\n    const {\n      checked = false,\n      name,\n      size = radioPropSizeDefault,\n      view = radioPropViewDefault,\n      align = radioPropAlignDefault,\n      disabled,\n      className,\n      label,\n      onChange,\n      onFocus,\n      onBlur,\n      readOnly,\n      required,\n      step,\n      tabIndex,\n      inputId,\n      inputRef,\n      ...otherProps\n    } = usePropsHandler(COMPONENT_NAME, props, radioRef);\n\n    const handleChange: ChangeEventHandler<HTMLInputElement> = (e) => {\n      if (onChange) {\n        onChange({ e, checked: !checked });\n      }\n    };\n\n    return (\n      <label\n        {...otherProps}\n        className={cnRadio({ size, view, disabled, align }, [className])}\n        ref={useForkRef([ref, radioRef])}\n      >\n        <input\n          type=\"radio\"\n          name={name}\n          className={cnRadio('Input', [cnMixFocus()])}\n          checked={checked}\n          disabled={disabled}\n          onChange={handleChange}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          readOnly={readOnly}\n          required={required}\n          step={step}\n          id={inputId}\n          tabIndex={tabIndex}\n          ref={inputRef}\n        />\n        {label && <span className={cnRadio('Label')}>{label}</span>}\n      </label>\n    );\n  },\n);\n"],"mappings":"sQAAA,oBAEA,MAAOA,MAAP,EAAoCC,MAApC,KAAkD,OAAlD,CAEA,OAASC,UAAT,yCACA,OAASC,UAAT,oCACA,OAASC,EAAT,uBAEA,OAASC,eAAT,2CAEA,MAAO,IAAMC,cAAa,CAAG,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAAgB,IAAhB,CAAtB,CAEP,MAAO,IAAMC,qBAAmC,CAAGD,aAAa,CAAC,CAAD,CAAzD,CAEP,MAAO,IAAME,cAAa,CAAG,CAAC,SAAD,CAAY,OAAZ,CAAtB,CAEP,MAAO,IAAMC,qBAAmC,CAAGD,aAAa,CAAC,CAAD,CAAzD,CAEP,MAAO,IAAME,eAAc,CAAG,CAAC,QAAD,CAAW,KAAX,CAAvB,CAEP,MAAO,IAAMC,sBAAqC,CAAGD,cAAc,CAAC,CAAD,CAA5D,CAgCP,MAAO,IAAME,QAAO,CAAGR,EAAE,CAAC,OAAD,CAAlB,CAEP,MAAO,IAAMS,eAAc,CAAG,OAAvB,CAEP,MAAO,IAAMC,MAAK,CAAGd,KAAK,CAACe,UAAN,CACnB,SAACC,CAAD,CAAQC,CAAR,CAAgB,IACRC,EAAQ,CAAGjB,MAAM,CAAmB,IAAnB,CADT,GAsBVI,eAAe,CAACQ,cAAD,CAAiBG,CAAjB,CAAwBE,CAAxB,CAtBL,KAIZC,OAJY,CAIZA,CAJY,eAKZC,CALY,GAKZA,IALY,KAMZC,IANY,CAMZA,CANY,YAMLd,oBANK,OAOZe,IAPY,CAOZA,CAPY,YAOLb,oBAPK,OAQZc,KARY,CAQZA,CARY,YAQJZ,qBARI,GASZa,CATY,GASZA,QATY,CAUZC,CAVY,GAUZA,SAVY,CAWZC,CAXY,GAWZA,KAXY,CAYZC,CAZY,GAYZA,QAZY,CAaZC,CAbY,GAaZA,OAbY,CAcZC,CAdY,GAcZA,MAdY,CAeZC,CAfY,GAeZA,QAfY,CAgBZC,CAhBY,GAgBZA,QAhBY,CAiBZC,CAjBY,GAiBZA,IAjBY,CAkBZC,CAlBY,GAkBZA,QAlBY,CAmBZC,CAnBY,GAmBZA,OAnBY,CAoBZC,CApBY,GAoBZA,QApBY,CAqBTC,CArBS,uCA8Bd,MACE,8CACMA,CADN,EAEE,SAAS,CAAExB,OAAO,CAAC,CAAES,IAAI,CAAJA,CAAF,CAAQC,IAAI,CAAJA,CAAR,CAAcE,QAAQ,CAARA,CAAd,CAAwBD,KAAK,CAALA,CAAxB,CAAD,CAAkC,CAACE,CAAD,CAAlC,CAFpB,CAGE,GAAG,CAAEvB,UAAU,CAAC,CAACe,CAAD,CAAMC,CAAN,CAAD,CAHjB,GAKE,6BACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAEE,CAFR,CAGE,SAAS,CAAER,OAAO,CAAC,OAAD,CAAU,CAACT,UAAU,EAAX,CAAV,CAHpB,CAIE,OAAO,CAAEgB,CAJX,CAKE,QAAQ,CAAEK,CALZ,CAME,QAAQ,CAlB6C,QAArDa,aAAqD,CAACC,CAAD,CAAO,CAC5DX,CAD4D,EAE9DA,CAAQ,CAAC,CAAEW,CAAC,CAADA,CAAF,CAAKnB,OAAO,CAAE,CAACA,CAAf,CAAD,CAEX,CAQG,CAOE,OAAO,CAAES,CAPX,CAQE,MAAM,CAAEC,CARV,CASE,QAAQ,CAAEC,CATZ,CAUE,QAAQ,CAAEC,CAVZ,CAWE,IAAI,CAAEC,CAXR,CAYE,EAAE,CAAEE,CAZN,CAaE,QAAQ,CAAED,CAbZ,CAcE,GAAG,CAAEE,CAdP,EALF,CAqBGT,CAAK,EAAI,4BAAM,SAAS,CAAEd,OAAO,CAAC,OAAD,CAAxB,EAAoCc,CAApC,CArBZ,CAwBH,CAxDkB,CAAd"}