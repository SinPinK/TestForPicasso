import React from 'react';
export declare const DatePickerFieldTypeDateTimeRange: React.ForwardRefExoticComponent<Omit<import("../DatePickerFieldTypeDateTime/helpers").DatePickerFieldTypeDateTimeProps, "id" | "onFocus" | "onBlur" | "onChange" | "name" | "value" | "inputRef" | "leftSide" | "rightSide"> & {
    onChange?: ((props: {
        e: Event;
        value: import("../../../utils/types/Date").DateRange | null;
    }) => void) | undefined;
    value?: import("../../../utils/types/Date").DateRange | null | undefined;
    startFieldInputRef?: React.Ref<HTMLInputElement> | undefined;
    endFieldInputRef?: React.Ref<HTMLInputElement> | undefined;
    startFieldLeftSide?: string | import("@consta/icons/Icon").IconComponent | undefined;
    startFieldRightSide?: string | import("@consta/icons/Icon").IconComponent | undefined;
    endFieldLeftSide?: string | import("@consta/icons/Icon").IconComponent | undefined;
    endFieldRightSide?: string | import("@consta/icons/Icon").IconComponent | undefined;
    startFieldRef?: React.Ref<HTMLDivElement> | undefined;
    endFieldRef?: React.Ref<HTMLDivElement> | undefined;
    startFieldOnFocus?: React.FocusEventHandler<HTMLElement> | undefined;
    endFieldOnFocus?: React.FocusEventHandler<HTMLElement> | undefined;
    startFieldOnBlur?: React.FocusEventHandler<HTMLElement> | undefined;
    endFieldOnBlur?: React.FocusEventHandler<HTMLElement> | undefined;
    startFocused?: boolean | undefined;
    endFocused?: boolean | undefined;
    id?: string | undefined;
    onChangeCurrentVisibleDate?: ((date: Date) => void) | undefined;
    currentVisibleDate?: Date | undefined;
    startFieldName?: string | undefined;
    endFieldName?: string | undefined;
} & React.RefAttributes<HTMLDivElement>>;
