import _slicedToArray from"@babel/runtime/helpers/slicedToArray";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";var _excluded=["events","dateTimeView","locale","dropdownForm","onFocus","dropdownClassName","currentVisibleDate","onChangeCurrentVisibleDate","multiplicityHours","multiplicityMinutes","multiplicitySeconds","renderAdditionalControls"];import addMonths from"date-fns/addMonths";import startOfMonth from"date-fns/startOfMonth";import React,{forwardRef,useEffect,useRef}from"react";import{useClickOutside}from"../../../hooks/useClickOutside/useClickOutside";import{useFlag}from"../../../hooks/useFlag/useFlag";import{setRef}from"../../../utils/setRef";import{DatePickerDropdown}from"../DatePickerDropdown/DatePickerDropdown";import{DatePickerFieldTypeDateTime}from"../DatePickerFieldTypeDateTime/DatePickerFieldTypeDateTime";import{datePickerPropFormatTypeDateTime,getDropdownZIndex,getMultiplicityTime}from"../helpers";import{datePickerPropDateTimeViewDefault}from"../types";import{useCurrentVisibleDate}from"../useCurrentVisibleDate";export var DatePickerTypeDateTime=forwardRef(function(a,b){var c=a.events,d=a.dateTimeView,e=void 0===d?datePickerPropDateTimeViewDefault:d,f=a.locale,g=a.dropdownForm,h=a.onFocus,i=a.dropdownClassName,j=a.currentVisibleDate,k=a.onChangeCurrentVisibleDate,l=a.multiplicityHours,m=a.multiplicityMinutes,n=a.multiplicitySeconds,o=a.renderAdditionalControls,p=_objectWithoutProperties(a,_excluded),q=getMultiplicityTime(p.format||datePickerPropFormatTypeDateTime,l,m,n),r=_slicedToArray(q,3),s=r[0],t=r[1],u=r[2],v=useRef(null),w=useRef(null),x=useFlag(!1),y=_slicedToArray(x,2),z=y[0],A=y[1],B=useCurrentVisibleDate({currentVisibleDate:j,maxDate:a.maxDate,minDate:a.minDate,value:a.value,startOfUnit:startOfMonth,onChangeCurrentVisibleDate:k,calendarVisible:z}),C=_slicedToArray(B,2),D=C[0],E=C[1];return useEffect(function(){b&&setRef(b,v.current)},[b,v]),useEffect(function(){if(a.value&&"classic"===e&&D){var b=startOfMonth(a.value);return void(b.getTime()!==D.getTime()&&E(b))}if(a.value&&"classic"!==e&&D){var c=startOfMonth(a.value);c.getTime()!==D.getTime()&&c.getTime()!==addMonths(D,1).getTime()&&E(c)}},[a.value]),useClickOutside({isActive:z,ignoreClicksInsideRefs:[v,w],handler:A.off}),React.createElement(React.Fragment,null,React.createElement(DatePickerFieldTypeDateTime,Object.assign({},p,{ref:v,onFocus:function onFocusHandler(a){h&&h(a),A.on()},multiplicityHours:s,multiplicitySeconds:u,multiplicityMinutes:t})),React.createElement(DatePickerDropdown,{ref:w,anchorRef:v,isOpen:z,value:a.value||void 0,type:"date-time",view:e,events:c,className:i,locale:f,minDate:a.minDate,maxDate:a.maxDate,currentVisibleDate:D,form:g,onChange:a.onChange,renderAdditionalControls:o,onChangeCurrentVisibleDate:E,multiplicityHours:s,multiplicitySeconds:u,multiplicityMinutes:t,zIndex:getDropdownZIndex(a.style)}))});
//# sourceMappingURL=DatePickerTypeDateTime.js.map