{"version":3,"file":"helpers.js","names":["addHours","addMinutes","addSeconds","format","isValid","isWithinInterval","parse","startOfDay","startOfHour","startOfMinute","IMask","useCallback","useEffect","useMemo","useState","useIMask","useMutableRef","leapYear","getLabelHours","getLabelMinutes","getLabelSeconds","datePickerPropFormatTypeDate","datePickerPropFormatTypeDateTime","datePickerPropSeparatorDefault","getParts","getPartsDate","getTimeEnum","datePickerErrorTypes","usePicker","props","value","onChange","onError","formatProp","separator","maxDate","minDate","multiplicityHours","multiplicityMinutes","multiplicitySeconds","onChangeRef","valueRef","onErrorRef","stringValue","setStringValue","stringValueRef","formatParts","handleChange","e","current","partsDate","dd","MM","yyyy","HH","mm","ss","filter","item","length","date","Date","start","end","type","getTime","options","mask","pattern","blocks","MaskedRange","from","to","MaskedEnum","lazy","autofix","string","validate","_val","params","maskOptions","inputRef","clearValue"],"sources":["../../../../../../src/components/DatePicker/DatePickerFieldTypeDateTime/helpers.ts"],"sourcesContent":["import { IconComponent, IconPropSize } from '@consta/icons/Icon';\nimport {\n  addHours,\n  addMinutes,\n  addSeconds,\n  format,\n  isValid,\n  isWithinInterval,\n  parse,\n  startOfDay,\n  startOfHour,\n  startOfMinute,\n} from 'date-fns';\nimport IMask from 'imask';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { useIMask } from '##/components/TextField';\n\nimport { useMutableRef } from '../../../hooks/useMutableRef/useMutableRef';\nimport { leapYear } from '../../../utils/date';\nimport { PropsWithHTMLAttributes } from '../../../utils/types/PropsWithHTMLAttributes';\nimport {\n  getLabelHours,\n  getLabelMinutes,\n  getLabelSeconds,\n} from '../../DateTime/helpers';\nimport {\n  TextFieldPropForm,\n  TextFieldPropSize,\n  TextFieldPropStatus,\n  TextFieldPropView,\n  TextFieldPropWidth,\n} from '../../TextField/TextField';\nimport {\n  datePickerPropFormatTypeDate,\n  datePickerPropFormatTypeDateTime,\n  datePickerPropSeparatorDefault,\n  getParts,\n  getPartsDate,\n  getTimeEnum,\n} from '../helpers';\nimport { datePickerErrorTypes, DatePickerPropOnError } from '../types';\n\ntype DatePickerFieldTypeDateTimePropOnChange = (props: {\n  e: Event;\n  value: Date | null;\n}) => void;\n\nexport type DatePickerFieldTypeDateTimeProps = PropsWithHTMLAttributes<\n  {\n    className?: string;\n    value?: Date | null;\n    onChange?: DatePickerFieldTypeDateTimePropOnChange;\n    onError?: DatePickerPropOnError;\n    id?: string;\n    name?: string;\n    disabled?: boolean;\n    size?: TextFieldPropSize;\n    view?: TextFieldPropView;\n    form?: TextFieldPropForm;\n    status?: TextFieldPropStatus;\n    width?: TextFieldPropWidth;\n    onFocus?: React.FocusEventHandler<HTMLElement>;\n    onBlur?: React.FocusEventHandler<HTMLElement>;\n    autoFocus?: boolean;\n    placeholder?: string;\n    leftSide?: string | IconComponent;\n    rightSide?: string | IconComponent;\n    readOnly?: boolean;\n    required?: boolean;\n    tabIndex?: number;\n    inputRef?: React.Ref<HTMLTextAreaElement | HTMLInputElement>;\n    ariaLabel?: string;\n    iconSize?: IconPropSize;\n    children?: never;\n    format?: string;\n    separator?: string;\n    minDate?: Date;\n    maxDate?: Date;\n    focused?: boolean;\n    multiplicitySeconds?: number;\n    multiplicityMinutes?: number;\n    multiplicityHours?: number;\n    label?: string;\n    labelIcon?: IconComponent;\n    caption?: string;\n    labelPosition?: 'top' | 'left';\n    withClearButton?: boolean;\n  },\n  HTMLDivElement\n>;\n\ntype UsePickerProps = {\n  value?: Date | null;\n  onChange?: DatePickerFieldTypeDateTimePropOnChange;\n  onError?: DatePickerPropOnError;\n  format: string;\n  separator: string;\n  minDate: Date;\n  maxDate: Date;\n  multiplicityHours: number | undefined;\n  multiplicitySeconds: number | undefined;\n  multiplicityMinutes: number | undefined;\n};\n\nexport const usePicker = (props: UsePickerProps) => {\n  const {\n    value,\n    onChange,\n    onError,\n    format: formatProp,\n    separator,\n    maxDate,\n    minDate,\n    multiplicityHours,\n    multiplicityMinutes,\n    multiplicitySeconds,\n  } = props;\n  const onChangeRef = useMutableRef(onChange);\n  const valueRef = useMutableRef(value);\n  const onErrorRef = useMutableRef(onError);\n\n  const [stringValue, setStringValue] = useState<string | null>(\n    value && isValid(value) ? format(value, formatProp) : null,\n  );\n  const stringValueRef = useMutableRef(stringValue);\n\n  const formatParts = useMemo(\n    () => getParts(formatProp, separator, true),\n    [formatProp, separator],\n  );\n\n  const handleChange = useCallback(\n    ({ e, value: stringValue }: { e: Event; value: string | null }) => {\n      if (stringValueRef.current === stringValue) {\n        return;\n      }\n\n      setStringValue(stringValue);\n      const onChange = onChangeRef.current;\n      const value = valueRef.current;\n\n      if (onChange) {\n        if (!stringValue) {\n          if (value) {\n            onChange({ e, value: null });\n          }\n          return;\n        }\n\n        const partsDate = getPartsDate(\n          stringValue,\n          formatProp,\n          separator,\n          true,\n          ['dd', 'MM', 'yyyy', 'HH', 'mm', 'ss'],\n        );\n\n        const [dd, MM, yyyy, HH, mm, ss] = partsDate;\n\n        if (partsDate.filter((item) => !!item).length === formatParts.length) {\n          const date = parse(\n            `${dd}${datePickerPropSeparatorDefault}${MM}${datePickerPropSeparatorDefault}${yyyy} ${\n              HH || '00'\n            }:${mm || '00'}:${ss || '00'}`,\n            datePickerPropFormatTypeDateTime,\n            new Date(),\n          );\n          if (!isWithinInterval(date, { start: minDate, end: maxDate })) {\n            onErrorRef.current?.({\n              type: datePickerErrorTypes[0],\n              stringValue,\n              dd,\n              MM,\n              yyyy,\n              date,\n              HH,\n              mm,\n              ss,\n            });\n\n            if (value) {\n              onChange({ e, value: null });\n            }\n            return;\n          }\n          onChange({ e, value: date });\n        } else if (value) {\n          onChange({ e, value: null });\n        }\n      }\n    },\n    [minDate?.getTime(), maxDate?.getTime(), formatProp, separator],\n  );\n\n  const options: IMask.InputMask<IMask.MaskedDateOptions> = useMemo(\n    () =>\n      ({\n        mask: Date,\n        pattern: formatProp,\n        blocks: {\n          yyyy: {\n            mask: IMask.MaskedRange,\n            from: 1,\n            to: 9999,\n          },\n          MM: {\n            mask: IMask.MaskedRange,\n            from: 1,\n            to: 12,\n          },\n          dd: {\n            mask: IMask.MaskedRange,\n            from: 1,\n            to: 31,\n          },\n          HH:\n            multiplicityHours && multiplicityHours > 1\n              ? {\n                  mask: IMask.MaskedEnum,\n                  enum: getTimeEnum(\n                    24,\n                    multiplicityHours,\n                    startOfDay,\n                    addHours,\n                    getLabelHours,\n                  ),\n                }\n              : {\n                  mask: IMask.MaskedRange,\n                  from: 0,\n                  to: 23,\n                },\n          mm:\n            multiplicityMinutes && multiplicityMinutes > 1\n              ? {\n                  mask: IMask.MaskedEnum,\n                  enum: getTimeEnum(\n                    60,\n                    multiplicityMinutes,\n                    startOfHour,\n                    addMinutes,\n                    getLabelMinutes,\n                  ),\n                }\n              : {\n                  mask: IMask.MaskedRange,\n                  from: 0,\n                  to: 59,\n                },\n          ss:\n            multiplicitySeconds && multiplicitySeconds > 1\n              ? {\n                  mask: IMask.MaskedEnum,\n                  enum: getTimeEnum(\n                    60,\n                    multiplicitySeconds,\n                    startOfMinute,\n                    addSeconds,\n                    getLabelSeconds,\n                  ),\n                }\n              : {\n                  mask: IMask.MaskedRange,\n                  from: 0,\n                  to: 59,\n                },\n        },\n        lazy: true,\n        autofix: true,\n        format: (date: Date) => format(date, formatProp),\n        parse: (string: string) => parse(string, formatProp, new Date()),\n        validate: (string: string) => {\n          const [dd, MM, yyyy, HH, mm, ss] = getPartsDate(\n            string,\n            formatProp,\n            separator,\n            true,\n            ['dd', 'MM', 'yyyy', 'HH', 'mm', 'ss'],\n          );\n          if (\n            dd &&\n            MM &&\n            !isValid(\n              parse(\n                `${dd}${datePickerPropSeparatorDefault}${MM}${datePickerPropSeparatorDefault}${leapYear}`,\n                datePickerPropFormatTypeDate,\n                new Date(),\n              ),\n            )\n          ) {\n            onErrorRef.current?.({\n              type: datePickerErrorTypes[1],\n              stringValue: string,\n              dd,\n              MM,\n              yyyy,\n              HH,\n              mm,\n              ss,\n            });\n            return false;\n          }\n          if (\n            dd &&\n            MM &&\n            yyyy &&\n            !isValid(\n              parse(\n                `${dd}${datePickerPropSeparatorDefault}${MM}${datePickerPropSeparatorDefault}${yyyy}`,\n                datePickerPropFormatTypeDate,\n                new Date(),\n              ),\n            )\n          ) {\n            onErrorRef.current?.({\n              type: datePickerErrorTypes[1],\n              stringValue: string,\n              dd,\n              MM,\n              yyyy,\n              HH,\n              mm,\n              ss,\n            });\n            return false;\n          }\n          return true;\n        },\n        // проблема в типах IMask\n      } as unknown as IMask.InputMask<IMask.MaskedDateOptions>),\n    [\n      formatProp,\n      separator,\n      multiplicityHours,\n      multiplicitySeconds,\n      multiplicityMinutes,\n    ],\n  );\n\n  const { inputRef } = useIMask({\n    value: stringValue,\n    onChange: (_val, params) => handleChange?.(params),\n    maskOptions: options,\n  });\n\n  const clearValue = (e: Event) => {\n    setStringValue(null);\n    onChange?.({ e, value: null });\n  };\n\n  // при изменении value, нужно обновить stringValue\n  useEffect(() => {\n    if (value && isValid(value)) {\n      setStringValue(format(value, formatProp));\n    } else if (stringValue?.length === formatProp.length) {\n      // если количество введенных символов меньше чем в формате маски\n      // то не нужно мешать вводу с клавиатуры\n      // если дата была введена полностью и value пришел null,\n      // то можно считать что поле нуждается в очистке\n      setStringValue('');\n    }\n  }, [value?.getTime()]);\n\n  return {\n    stringValue,\n    inputRef,\n    clearValue,\n  };\n};\n"],"mappings":"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"}