{"version":3,"file":"helpers.js","names":["addHours","addMinutes","addSeconds","format","isValid","isWithinInterval","parse","startOfDay","startOfHour","startOfMinute","IMask","useCallback","useEffect","useMemo","useState","useIMask","useMutableRef","getLabelHours","getLabelMinutes","getLabelSeconds","datePickerPropFormatTypeTime","getParts","getPartsDate","getTimeEnum","datePickerErrorTypes","usePicker","props","value","onChange","onError","multiplicityHours","multiplicityMinutes","multiplicitySeconds","formatProp","separator","maxDate","minDate","onChangeRef","valueRef","onErrorRef","stringValue","setStringValue","stringValueRef","formatParts","handleChange","e","current","partsTime","HH","mm","ss","filter","item","length","date","Date","start","end","type","getTime","options","mask","pattern","blocks","MaskedEnum","MaskedRange","from","to","lazy","autofix","string","validate","_val","params","maskOptions","inputRef","clearValue"],"sources":["../../../../../../src/components/DatePicker/DatePickerFieldTypeTime/helpers.ts"],"sourcesContent":["import { IconComponent, IconPropSize } from '@consta/icons/Icon';\nimport {\n  addHours,\n  addMinutes,\n  addSeconds,\n  format,\n  isValid,\n  isWithinInterval,\n  parse,\n  startOfDay,\n  startOfHour,\n  startOfMinute,\n} from 'date-fns';\nimport IMask from 'imask';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { useIMask } from '##/components/TextField';\n\nimport { useMutableRef } from '../../../hooks/useMutableRef/useMutableRef';\nimport { PropsWithHTMLAttributes } from '../../../utils/types/PropsWithHTMLAttributes';\nimport {\n  getLabelHours,\n  getLabelMinutes,\n  getLabelSeconds,\n} from '../../DateTime/helpers';\nimport {\n  TextFieldPropForm,\n  TextFieldPropSize,\n  TextFieldPropStatus,\n  TextFieldPropView,\n  TextFieldPropWidth,\n} from '../../TextField/TextField';\nimport {\n  datePickerPropFormatTypeTime,\n  getParts,\n  getPartsDate,\n  getTimeEnum,\n} from '../helpers';\nimport { datePickerErrorTypes, DatePickerPropOnError } from '../types';\n\ntype DatePickerFieldTypeTimePropOnChange = (props: {\n  e: Event;\n  value: Date | null;\n}) => void;\n\nexport type DatePickerFieldTypeTimeProps = PropsWithHTMLAttributes<\n  {\n    className?: string;\n    value?: Date | null;\n    onChange?: DatePickerFieldTypeTimePropOnChange;\n    onError?: DatePickerPropOnError;\n    id?: string;\n    name?: string;\n    disabled?: boolean;\n    size?: TextFieldPropSize;\n    view?: TextFieldPropView;\n    form?: TextFieldPropForm;\n    status?: TextFieldPropStatus;\n    width?: TextFieldPropWidth;\n    onFocus?: React.FocusEventHandler<HTMLElement>;\n    onBlur?: React.FocusEventHandler<HTMLElement>;\n    autoFocus?: boolean;\n    placeholder?: string;\n    leftSide?: string | IconComponent;\n    rightSide?: string | IconComponent;\n    readOnly?: boolean;\n    required?: boolean;\n    tabIndex?: number;\n    inputRef?: React.Ref<HTMLTextAreaElement | HTMLInputElement>;\n    ariaLabel?: string;\n    iconSize?: IconPropSize;\n    children?: never;\n    format?: string;\n    separator?: string;\n    minDate?: Date;\n    maxDate?: Date;\n    focused?: boolean;\n    multiplicitySeconds?: number;\n    multiplicityMinutes?: number;\n    multiplicityHours?: number;\n    label?: string;\n    labelIcon?: IconComponent;\n    caption?: string;\n    labelPosition?: 'top' | 'left';\n    withClearButton?: boolean;\n  },\n  HTMLDivElement\n>;\n\ntype UsePickerProps = {\n  value?: Date | null;\n  onChange?: DatePickerFieldTypeTimePropOnChange;\n  onError?: DatePickerPropOnError;\n  multiplicityHours: number | undefined;\n  multiplicitySeconds: number | undefined;\n  multiplicityMinutes: number | undefined;\n  format: string;\n  separator: string;\n  minDate: Date;\n  maxDate: Date;\n};\n\nexport const usePicker = (props: UsePickerProps) => {\n  const {\n    value,\n    onChange,\n    onError,\n    multiplicityHours,\n    multiplicityMinutes,\n    multiplicitySeconds,\n    format: formatProp,\n    separator,\n    maxDate,\n    minDate,\n  } = props;\n  const onChangeRef = useMutableRef(onChange);\n  const valueRef = useMutableRef(value);\n  const onErrorRef = useMutableRef(onError);\n\n  const [stringValue, setStringValue] = useState<string | null>(\n    value && isValid(value) ? format(value, formatProp) : null,\n  );\n  const stringValueRef = useMutableRef(stringValue);\n\n  const formatParts = useMemo(\n    () => getParts(formatProp, ':'),\n    [formatProp, separator],\n  );\n\n  const handleChange = useCallback(\n    ({ e, value: stringValue }: { e: Event; value: string | null }) => {\n      if (stringValueRef.current === stringValue) {\n        return;\n      }\n      setStringValue(stringValue);\n      const onChange = onChangeRef.current;\n      const value = valueRef.current;\n      if (onChange) {\n        if (!stringValue) {\n          if (value) {\n            onChange({ e, value: null });\n          }\n          return;\n        }\n        const partsTime = getPartsDate(stringValue, formatProp, ':', false, [\n          'HH',\n          'mm',\n          'ss',\n        ]);\n\n        const [HH, mm, ss] = partsTime;\n        if (partsTime.filter((item) => !!item).length === formatParts.length) {\n          const date = parse(\n            `${HH}:${mm}:${ss}`,\n            datePickerPropFormatTypeTime,\n            value || new Date(),\n          );\n          if (!isWithinInterval(date, { start: minDate, end: maxDate })) {\n            onErrorRef.current?.({\n              type: datePickerErrorTypes[0],\n              stringValue,\n              date,\n              HH,\n              mm,\n              ss,\n            });\n\n            if (value) {\n              onChange({ e, value: null });\n            }\n            return;\n          }\n          onChange({ e, value: date });\n        } else if (value) {\n          onChange({ e, value: null });\n        }\n      }\n    },\n    [minDate?.getTime(), maxDate?.getTime(), formatProp, separator],\n  );\n\n  const options: IMask.InputMask<IMask.MaskedDateOptions> = useMemo(\n    () =>\n      ({\n        mask: Date,\n        pattern: formatProp,\n        blocks: {\n          HH:\n            multiplicityHours && multiplicityHours > 1\n              ? {\n                  mask: IMask.MaskedEnum,\n                  enum: getTimeEnum(\n                    24,\n                    multiplicityHours,\n                    startOfDay,\n                    addHours,\n                    getLabelHours,\n                  ),\n                }\n              : {\n                  mask: IMask.MaskedRange,\n                  from: 0,\n                  to: 23,\n                },\n          mm:\n            multiplicityMinutes && multiplicityMinutes > 1\n              ? {\n                  mask: IMask.MaskedEnum,\n                  enum: getTimeEnum(\n                    60,\n                    multiplicityMinutes,\n                    startOfHour,\n                    addMinutes,\n                    getLabelMinutes,\n                  ),\n                }\n              : {\n                  mask: IMask.MaskedRange,\n                  from: 0,\n                  to: 59,\n                },\n          ss:\n            multiplicitySeconds && multiplicitySeconds > 1\n              ? {\n                  mask: IMask.MaskedEnum,\n                  enum: getTimeEnum(\n                    60,\n                    multiplicitySeconds,\n                    startOfMinute,\n                    addSeconds,\n                    getLabelSeconds,\n                  ),\n                }\n              : {\n                  mask: IMask.MaskedRange,\n                  from: 0,\n                  to: 59,\n                },\n        },\n        lazy: true,\n        autofix: true,\n        format: (date: Date) => format(date, formatProp),\n        parse: (string: string) => parse(string, formatProp, new Date()),\n        validate: (string: string) => {\n          const [HH, mm, ss] = getPartsDate(string, formatProp, ':', false, [\n            'HH',\n            'mm',\n            'ss',\n          ]);\n          if (\n            HH &&\n            mm &&\n            ss &&\n            !isValid(\n              parse(\n                `${HH}:${mm}:${ss}`,\n                datePickerPropFormatTypeTime,\n                new Date(),\n              ),\n            )\n          ) {\n            onErrorRef.current?.({\n              type: datePickerErrorTypes[1],\n              stringValue: string,\n              HH,\n              mm,\n              ss,\n            });\n            return false;\n          }\n          return true;\n        },\n        // проблема в типах IMask\n      } as unknown as IMask.InputMask<IMask.MaskedDateOptions>),\n    [\n      formatProp,\n      separator,\n      multiplicityHours,\n      multiplicityMinutes,\n      multiplicitySeconds,\n    ],\n  );\n\n  const { inputRef } = useIMask({\n    value: stringValue,\n    onChange: (_val, params) => handleChange?.(params),\n    maskOptions: options,\n  });\n\n  const clearValue = (e: Event) => {\n    setStringValue(null);\n    onChange?.({ e, value: null });\n  };\n\n  // при изменении value, нужно обновить stringValue\n  useEffect(() => {\n    if (value && isValid(value)) {\n      setStringValue(format(value, formatProp));\n    } else if (stringValue?.length === formatProp.length) {\n      // если количество введенных символов меньше чем в формате маски\n      // то не нужно мешать вводу с клавиатуры\n      // если дата была введена полностью и value пришел null,\n      // то можно считать что поле нуждается в очистке\n      setStringValue('');\n    }\n  }, [value?.getTime()]);\n\n  return {\n    stringValue,\n    inputRef,\n    clearValue,\n  };\n};\n"],"mappings":"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"}