import _slicedToArray from"@babel/runtime/helpers/slicedToArray";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";var _excluded=["className","minDate","maxDate","value","disableDates","onChange","onChangeRange","currentVisibleDate","events","locale","view","onMove","onChangeCurrentVisibleDate"];import{addMonths,startOfMonth}from"date-fns";import ruLocale from"date-fns/locale/ru";import React,{forwardRef,useEffect}from"react";import{useFlag}from"../../../hooks/useFlag/useFlag";import{DateTimeLabel}from"../DateTimeLabel/DateTimeLabel";import{DateTimeMonth}from"../DateTimeMonth/DateTimeMonth";import{DateTimeToggler}from"../DateTimeToggler/DateTimeToggler";import{DateTimeTypeMonth}from"../DateTimeTypeMonth/DateTimeTypeMonth";import{DateTimeYearSlider}from"../DateTimeYearSlider/DateTimeYearSlider";import{getDaysOfMonth,getDaysOfWeek,getHandleSelectDate,getMouthLabelWithYear,isEqualDay,moveTypes,useCurrentVisibleDate}from"../helpers";import{dateTimePropView,dateTimePropViewDefault}from"../helpers/types";import{cnDateTimeMixLayout}from"../mixs";export var DateTimeTypeDate=forwardRef(function(a,b){var c=a.className,d=a.minDate,e=a.maxDate,f=a.value,g=a.disableDates,h=a.onChange,i=a.onChangeRange,j=a.currentVisibleDate,k=a.events,l=a.locale,m=void 0===l?ruLocale:l,n=a.view,o=void 0===n?dateTimePropViewDefault:n,p=a.onMove,q=a.onChangeCurrentVisibleDate,r=_objectWithoutProperties(a,_excluded),s=useFlag(),t=_slicedToArray(s,2),u=t[0],v=t[1];useEffect(function(){u||(null===p||void 0===p?void 0:p(moveTypes[2]))},[u]);var w=useCurrentVisibleDate({currentVisibleDate:j,maxDate:e,minDate:d,value:f,startOfUnit:startOfMonth,onChangeCurrentVisibleDate:q}),x=_slicedToArray(w,2),y=x[0],z=x[1];if(u)return React.createElement(DateTimeTypeMonth,Object.assign({},r,{ref:b,className:c,minDate:d,maxDate:e,locale:m,events:k,currentVisibleDate:y,view:o,onChange:function(a){var b=a.value;z(b),v.off()},onMove:p}));var A=getHandleSelectDate({minDate:d,maxDate:e,value:f,onChange:h,onChangeRange:i,isEqualUnit:isEqualDay}),B=getDaysOfMonth({date:y,disableDates:g,handleDayClick:A,value:f,events:k,minDate:d,maxDate:e,locale:m}),C=getMouthLabelWithYear(y,m),D=getDaysOfWeek(m),E=function(){return z(addMonths(y,1))},F=function(){return z(addMonths(y,-1))};if(o===dateTimePropView[0])return React.createElement("div",Object.assign({},r,{ref:b,className:cnDateTimeMixLayout({view:o},[c])}),React.createElement(DateTimeToggler,{className:cnDateTimeMixLayout("Label"),prevOnClick:F,nextOnClick:E,label:C,onLabelClick:v.on}),React.createElement(DateTimeMonth,{daysOfWeek:D,daysOfMonth:B}));var G=addMonths(y,1),H=getDaysOfMonth({date:G,handleDayClick:A,value:f,events:k,minDate:d,maxDate:e,locale:m}),I=getMouthLabelWithYear(G,m);return o===dateTimePropView[1]?React.createElement("div",Object.assign({},r,{ref:b,className:cnDateTimeMixLayout({view:o},[c])}),React.createElement("div",{className:cnDateTimeMixLayout("Page")},React.createElement(DateTimeToggler,{className:cnDateTimeMixLayout("Label"),prevOnClick:F,label:C,onLabelClick:v.on}),React.createElement(DateTimeMonth,{daysOfWeek:D,daysOfMonth:B})),React.createElement("div",{className:cnDateTimeMixLayout("Page")},React.createElement(DateTimeToggler,{className:cnDateTimeMixLayout("Label"),nextOnClick:E,label:I,onLabelClick:v.on}),React.createElement(DateTimeMonth,{daysOfWeek:D,daysOfMonth:H}))):React.createElement("div",Object.assign({},r,{ref:b,className:cnDateTimeMixLayout({view:o},[c])}),React.createElement(DateTimeYearSlider,{className:cnDateTimeMixLayout("Slider"),currentVisibleDate:y,onChange:z,value:f,locale:m}),React.createElement("div",{className:cnDateTimeMixLayout("PageWrapper")},React.createElement("div",{className:cnDateTimeMixLayout("Page")},React.createElement(DateTimeLabel,{className:cnDateTimeMixLayout("Label"),label:C,onClick:v.on,cursor:"pointer"}),React.createElement(DateTimeMonth,{daysOfWeek:D,daysOfMonth:B})),React.createElement("div",{className:cnDateTimeMixLayout("Page")},React.createElement(DateTimeLabel,{className:cnDateTimeMixLayout("Label"),label:I,onClick:v.on,cursor:"pointer"}),React.createElement(DateTimeMonth,{daysOfWeek:D,daysOfMonth:H}))))});
//# sourceMappingURL=DateTimeTypeDate.js.map