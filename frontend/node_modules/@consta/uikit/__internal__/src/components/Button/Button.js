import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";var _excluded=["size","view","width","form","iconLeft","iconRight","label","className","onClick","disabled","loading","tabIndex","as","onlyIcon","iconSize"];import"./Button.css";import React,{useRef}from"react";import{useForkRef}from"../../hooks/useForkRef/useForkRef";import{cnMixFocus}from"../../mixs/MixFocus/MixFocus";import{cn}from"../../utils/bem";import{getByMap}from"../../utils/getByMap";import{forwardRefWithAs}from"../../utils/types/PropsWithAsAttributes";import{usePropsHandler}from"../EventInterceptor/usePropsHandler";import{Loader}from"../Loader/Loader";export var buttonPropSize=["m","xs","s","l"];export var buttonPropSizeDefault=buttonPropSize[0];export var buttonPropView=["primary","clear","ghost","secondary"];export var buttonPropViewDefault=buttonPropView[0];export var buttonPropWidth=["default","full"];export var buttonPropWidthDefault=buttonPropWidth[0];export var buttonPropForm=["default","brick","round","brickRound","roundBrick","brickDefault","defaultBrick"];var mapStableForm={default:"default",defaultClear:"defaultBrick",defaultBrick:"defaultBrick",brick:"brick",brickDefault:"brickDefault",brickClear:"brick",brickRound:"brickRound",round:"round",roundClear:"roundBrick",roundBrick:"roundBrick",clearRound:"brickRound",clearDefault:"brickDefault",clearBrick:"brick",clearClear:"brick"};export var buttonPropFormDefault=buttonPropForm[0];export var COMPONENT_NAME="Button";export var cnButton=cn("Button");var sizeMap={xs:"xs",s:"xs",m:"s",l:"m"},sizeMapOnlyIcon={xs:"xs",s:"s",m:"m",l:"m"};export var Button=forwardRefWithAs(function(a,b){var c=useRef(null),d=usePropsHandler(COMPONENT_NAME,a,c),e=d.size,f=void 0===e?buttonPropSizeDefault:e,g=d.view,h=void 0===g?buttonPropViewDefault:g,i=d.width,j=void 0===i?buttonPropWidthDefault:i,k=d.form,l=void 0===k?buttonPropFormDefault:k,m=d.iconLeft,n=d.iconRight,o=d.label,p=d.className,q=d.onClick,r=d.disabled,s=d.loading,t=d.tabIndex,u=d.as,v=void 0===u?"button":u,w=d.onlyIcon,x=d.iconSize,y=_objectWithoutProperties(d,_excluded),z=v,A=(!o||w)&&(m||n),B=m,C=n,D=a.title||!!A&&o||void 0,E=A?getByMap(sizeMapOnlyIcon,f,x):getByMap(sizeMap,f,x);return React.createElement(z,Object.assign({},y,{onClick:q?function handleClick(a){r||s||!q||q(a)}:void 0,className:cnButton({size:f,view:h,width:j,form:mapStableForm[l],disabled:r,loading:s,withIcon:!!m||!!n,onlyIcon:!!A},[cnMixFocus(),p]),tabIndex:t,title:D,ref:useForkRef([b,c])},"button"===z?{disabled:r||s}:{}),A&&React.createElement(A,{className:cnButton("Icon"),size:E}),!A&&((B||C)&&o?React.createElement(React.Fragment,null,B&&React.createElement(B,{className:cnButton("Icon",{position:"left"}),size:E}),React.createElement("span",{className:cnButton("Label")},o),C&&React.createElement(C,{className:cnButton("Icon",{position:"right"}),size:E})):o),s&&React.createElement(Loader,{className:cnButton("Loader"),size:"s"}))});
//# sourceMappingURL=Button.js.map