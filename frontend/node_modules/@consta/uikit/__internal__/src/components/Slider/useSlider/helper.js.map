{"version":3,"file":"helper.js","names":["getSteps","isRangeParams","params","range","isNotRangeParams","trackPosition","event","x","clientX","y","clientY","changedTouches","getActiveValue","value","active","Array","isArray","detectActiveButton","position","buttons","activeButton","forEach","buttonRef","index","button","current","getBoundingClientRect","width","height","focus","getValidValue","min","max","step","division","toString","split","stepValue","Math","abs","toFixed","length","roundValue","round","resultValue","stepPoint","minValue","maxValue","isValidValue","getValueByPosition","sliderRef","absoluteSize","getNewValue","changedValue","currentValue","maxRangeValue","minRangeValue","left","right","analyzedValue","analyzeDivisionValue","newValue","steps","stepSize","nearStep"],"sources":["../../../../../../src/components/Slider/useSlider/helper.ts"],"sourcesContent":["import React from 'react';\n\nimport { PropOnChange, SliderValue, TrackPosition } from '../helper';\nimport { getSteps } from '../useSliderStationing';\n\nexport type ActiveButton = 0 | 1 | null | undefined;\n\nexport type Stationing = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n};\n\nexport type UseSliderProps<RANGE extends boolean = false> = {\n  disabled: boolean;\n  range?: RANGE;\n  value: SliderValue<RANGE>;\n  min: number;\n  max: number;\n  step?: number | number[];\n  onChange?: PropOnChange<RANGE>;\n  onAfterChange?: PropOnChange<RANGE>;\n  sliderRef: React.RefObject<HTMLDivElement | HTMLButtonElement>;\n  buttonRefs: React.RefObject<HTMLButtonElement>[];\n};\n\nexport type UseSliderValues = {\n  onKeyPress: (e: React.KeyboardEvent, typeButton: ActiveButton) => void;\n  onFocus: (\n    e: React.FocusEvent<HTMLButtonElement> | React.MouseEvent,\n    button: ActiveButton,\n  ) => void;\n  handlePress: (typeButton: ActiveButton) => void;\n  onSliderClick: React.MouseEventHandler;\n  activeButton: ActiveButton;\n  currentValue: [number] | [number, number];\n  popoverPosition: TrackPosition[];\n};\n\nexport const isRangeParams = (\n  params: UseSliderProps<boolean>,\n): params is UseSliderProps<true> => {\n  return !!params.range;\n};\n\nexport const isNotRangeParams = (\n  params: UseSliderProps<boolean>,\n): params is UseSliderProps<false> => {\n  return !params.range;\n};\n\nexport const trackPosition = (\n  event: TouchEvent | MouseEvent,\n): TrackPosition => {\n  if ('clientX' in event) {\n    return {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }\n  return {\n    x: event.changedTouches[0].clientX,\n    y: event.changedTouches[0].clientY,\n  };\n};\n\nexport const getActiveValue = (\n  value: number | [number, number],\n  active: ActiveButton,\n) => {\n  if (Array.isArray(value)) {\n    return value[typeof active === 'number' ? active : 0];\n  }\n  return value;\n};\n\nexport const detectActiveButton: (\n  posittion: TrackPosition,\n  buttons: React.RefObject<HTMLButtonElement>[],\n) => ActiveButton = (position, buttons) => {\n  let activeButton: ActiveButton = null;\n  buttons.forEach((buttonRef, index) => {\n    const button = buttonRef.current;\n    if (button && position) {\n      const { x, y, width, height } = button.getBoundingClientRect();\n      if (\n        x <= position.x &&\n        x + width >= position.x &&\n        y <= position.y &&\n        y + height >= position.y\n      ) {\n        activeButton = index as ActiveButton;\n        button.focus();\n      }\n    }\n  });\n  return activeButton;\n};\n\nexport const getValidValue = (\n  value: number,\n  min: number,\n  max: number,\n  step?: number | number[],\n) => {\n  if (typeof value === 'number') {\n    if (value >= max) return max;\n    if (value <= min) return min;\n    if (!Array.isArray(step)) {\n      const division = step?.toString().split('.')[1];\n      const stepValue = step || 1;\n      if (Math.abs(value) < 1) {\n        return Number(value.toFixed(division ? division.length : 0));\n      }\n      const roundValue =\n        Math.round(\n          Number(value.toFixed(division ? division.length : 0)) / stepValue,\n        ) * stepValue;\n      if (roundValue > max) return max;\n      if (roundValue < min) return min;\n      return Number(roundValue.toFixed(division ? division.length : 0));\n    }\n    let resultValue = value;\n    step.forEach((stepPoint, index) => {\n      let minValue = min;\n      let maxValue = max;\n      if (index === 0) {\n        maxValue = step[index + 1];\n      } else if (index === step.length - 1) {\n        minValue = stepPoint;\n        maxValue = max;\n      } else {\n        maxValue = step[index + 1];\n        minValue = stepPoint;\n      }\n      if (value <= maxValue && value >= minValue) {\n        if ((maxValue + minValue) / 2 > value) {\n          resultValue = minValue;\n        } else {\n          resultValue = maxValue;\n        }\n      }\n    });\n    return resultValue;\n  }\n  return value;\n};\n\nexport const isValidValue = (\n  value: number,\n  min: number,\n  max: number,\n  step?: number | number[],\n) => getValidValue(value, min, max, step) === value;\n\nexport const getValueByPosition = (\n  position: TrackPosition,\n  sliderRef: React.RefObject<HTMLDivElement | HTMLButtonElement>,\n  min: number,\n  max: number,\n  step?: number | number[],\n) => {\n  if (sliderRef.current && position) {\n    const { x, width } = sliderRef.current.getBoundingClientRect();\n    const absoluteSize = Math.abs(max - min);\n    const value = min + ((position.x - x) * absoluteSize) / width;\n    return getValidValue(value, min, max, step);\n  }\n  return 0;\n};\n\nexport const getNewValue = (\n  changedValue: number,\n  currentValue: number | [number, number],\n  step: number | number[],\n  min: number,\n  max: number,\n  activeButton: ActiveButton,\n): number | [number, number] => {\n  let maxRangeValue = max;\n  let minRangeValue = min;\n  if (Array.isArray(currentValue)) {\n    const [left, right] = currentValue;\n    if (activeButton === 1) {\n      minRangeValue = left;\n    } else {\n      maxRangeValue = right;\n    }\n  }\n  const analyzedValue = getValidValue(\n    analyzeDivisionValue(changedValue, step, min, max),\n    minRangeValue,\n    maxRangeValue,\n    step,\n  );\n  if (Array.isArray(currentValue)) {\n    return activeButton === 1\n      ? [currentValue[0], analyzedValue]\n      : [analyzedValue, currentValue[1]];\n  }\n  return analyzedValue;\n};\n\nexport const analyzeDivisionValue = (\n  value: number,\n  step: number | number[],\n  min: number,\n  max: number,\n) => {\n  let newValue: number = value;\n  if (Array.isArray(step)) {\n    const steps = getSteps(step, min, max);\n    steps.forEach((stepSize) => {\n      if (value && stepSize.min < value && stepSize.max >= value) {\n        if ((stepSize.max + stepSize.min) / 2 > value) {\n          newValue = stepSize.min;\n        } else {\n          newValue = stepSize.max;\n        }\n      }\n    });\n  } else {\n    if (value >= max) return max;\n    if (value <= min) return min;\n    const nearStep = (value - min) % step;\n    if (nearStep > step / 2) {\n      newValue = step - nearStep + value;\n    } else {\n      newValue = value - nearStep;\n    }\n  }\n  return newValue;\n};\n"],"mappings":"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"}