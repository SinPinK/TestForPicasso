{"version":3,"file":"helper.js","names":["propStatus","defaultPropStatus","propSize","defaultPropSize","isRangeParams","params","range","isNotRangeParams","defaultTooltipFormatter","value","toString","getValueForInput","props","field","getOnChandgeForInput","e","onChange","getIcon","side","getMaxForStartField","max","getMinForEndField","min"],"sources":["../../../../../src/components/Slider/helper.ts"],"sourcesContent":["import { IconComponent } from '@consta/icons/Icon';\nimport React from 'react';\n\nimport { PropsWithHTMLAttributes } from '../../utils/types/PropsWithHTMLAttributes';\nimport { ActiveButton } from './useSlider/helper';\n\nexport const propStatus = ['alert', 'warning', 'success'] as const;\nexport type PropStatus = typeof propStatus[number];\nexport const defaultPropStatus = propStatus[0];\n\nexport type PropView = 'default' | 'division';\n\nexport const propSize = ['s', 'xs', 'm', 'l'] as const;\nexport type PropSize = typeof propSize[number];\nexport const defaultPropSize: PropSize = propSize[0];\n\nexport type SliderValue<RANGE> = RANGE extends true ? [number, number] : number;\n\nexport type PropOnChange<RANGE> = (prop: {\n  e?:\n    | Event\n    | React.TouchEvent\n    | React.MouseEvent\n    | React.KeyboardEvent\n    | React.ChangeEvent;\n  value: SliderValue<RANGE>;\n}) => void;\n\ntype PropToolipFormatter = (value: number | undefined) => string;\n\ntype Side = IconComponent | 'input';\n\ntype Props<RANGE extends boolean = false> = {\n  className?: string;\n  step?: number | number[];\n  view?: PropView;\n  disabled?: boolean;\n  range?: RANGE;\n  withTooltip?: boolean;\n  value: SliderValue<RANGE>;\n  label?: string;\n  labelIcon?: IconComponent;\n  caption?: string;\n  status?: PropStatus;\n  min?: number;\n  size?: PropSize;\n  max?: number;\n  onChange?: PropOnChange<RANGE>;\n  onAfterChange?: PropOnChange<RANGE>;\n  leftSide?: Side;\n  tooltipFormatter?: PropToolipFormatter;\n  rightSide?: Side;\n};\n\nexport type Line = {\n  width: number;\n  active: boolean;\n  size?: number[];\n};\n\nexport type SliderLineProps = {\n  view?: PropView;\n  lines: Line[];\n  disabled?: boolean;\n  hovered?: boolean;\n  onHover?: (hovered: boolean) => void;\n};\n\nexport type SliderPointProps = PropsWithHTMLAttributes<\n  {\n    value?: number;\n    disabled?: boolean;\n    focused?: boolean;\n    hovered?: boolean;\n    withTooltip?: boolean;\n    handlePress?: (typeButton: ActiveButton) => void;\n    buttonLabel?: ActiveButton;\n    buttonRef?: React.RefObject<HTMLButtonElement>;\n    popoverPosition?: TrackPosition;\n    tooltipFormatter?: PropToolipFormatter;\n    onFocus?: (\n      e: React.FocusEvent<HTMLButtonElement> | React.MouseEvent,\n      button: ActiveButton,\n    ) => void;\n    onKeyPress?: (e: React.KeyboardEvent, typeButton?: ActiveButton) => void;\n    onHover?: (hovered: boolean) => void;\n    position: number;\n    tooltipZIndex?: number;\n  },\n  HTMLButtonElement\n>;\n\nexport type SliderProps<RANGE extends boolean> = PropsWithHTMLAttributes<\n  Props<RANGE>,\n  HTMLDivElement\n>;\n\nexport type SliderComponent = <RANGE extends boolean = false>(\n  props: SliderProps<RANGE>,\n) => React.ReactElement | null;\n\nconst isRangeParams = (params: Props<boolean>): params is Props<true> => {\n  return !!params.range;\n};\n\nconst isNotRangeParams = (params: Props<boolean>): params is Props<false> => {\n  return !params.range;\n};\n\nexport const defaultTooltipFormatter: PropToolipFormatter = (value) =>\n  value?.toString() || '';\n\nexport type TrackPosition = {\n  x: number;\n  y: number;\n} | null;\n\nexport const getValueForInput = (\n  props: SliderProps<boolean>,\n  field: 0 | 1,\n): number => {\n  if (isRangeParams(props)) {\n    return props.value[field];\n  }\n  return props.value as number;\n};\n\ntype GetOnChandgeForInputReturned = (props: {\n  e?: React.ChangeEvent | React.MouseEvent | React.KeyboardEvent;\n  value: number;\n}) => void;\n\nexport const getOnChandgeForInput =\n  (props: SliderProps<boolean>, field: 0 | 1): GetOnChandgeForInputReturned =>\n  ({ e, value }) => {\n    if (!props.onChange) {\n      return;\n    }\n    if (isNotRangeParams(props)) {\n      props.onChange({ e, value });\n    }\n    if (isRangeParams(props)) {\n      props.onChange({\n        e,\n        value: field ? [props.value[0], value] : [value, props.value[1]],\n      });\n    }\n  };\n\nexport const getIcon = (side?: Side) => {\n  if (side !== 'input') {\n    return side;\n  }\n};\n\nexport const getMaxForStartField = (props: SliderProps<boolean>) => {\n  if (isNotRangeParams(props)) {\n    return props.max;\n  }\n  if (isRangeParams(props)) {\n    return props.value[1];\n  }\n};\n\nexport const getMinForEndField = (props: SliderProps<boolean>) => {\n  if (isNotRangeParams(props)) {\n    return props.min;\n  }\n  if (isRangeParams(props)) {\n    return props.value[0];\n  }\n};\n"],"mappings":"AAMA,MAAO,IAAMA,WAAU,CAAG,CAAC,OAAD,CAAU,SAAV,CAAqB,SAArB,CAAnB,CAEP,MAAO,IAAMC,kBAAiB,CAAGD,UAAU,CAAC,CAAD,CAApC,CAIP,MAAO,IAAME,SAAQ,CAAG,CAAC,GAAD,CAAM,IAAN,CAAY,GAAZ,CAAiB,GAAjB,CAAjB,CAEP,MAAO,IAAMC,gBAAyB,CAAGD,QAAQ,CAAC,CAAD,CAA1C,C,GAuFDE,cAAa,CAAG,SAACC,CAAD,CAAmD,CACvE,MAAO,CAAC,CAACA,CAAM,CAACC,KACjB,C,CAEKC,gBAAgB,CAAG,SAACF,CAAD,CAAoD,CAC3E,MAAO,CAACA,CAAM,CAACC,KAChB,C,CAED,MAAO,IAAME,wBAA4C,CAAG,SAACC,CAAD,QAC1D,QAAAA,CAAK,WAALA,CAAA,QAAAA,CAAK,CAAEC,QAAP,KAAqB,EADqC,CAArD,CAQP,MAAO,IAAMC,iBAAgB,CAAG,SAC9BC,CAD8B,CAE9BC,CAF8B,CAGnB,OACPT,cAAa,CAACQ,CAAD,CADN,CAEFA,CAAK,CAACH,KAAN,CAAYI,CAAZ,CAFE,CAIJD,CAAK,CAACH,KACd,CARM,CAeP,MAAO,IAAMK,qBAAoB,CAC/B,SAACF,CAAD,CAA8BC,CAA9B,QACA,YAAkB,IAAfE,EAAe,GAAfA,CAAe,CAAZN,CAAY,GAAZA,KAAY,CACXG,CAAK,CAACI,QADK,GAIZT,gBAAgB,CAACK,CAAD,CAJJ,EAKdA,CAAK,CAACI,QAAN,CAAe,CAAED,CAAC,CAADA,CAAF,CAAKN,KAAK,CAALA,CAAL,CAAf,CALc,CAOZL,aAAa,CAACQ,CAAD,CAPD,EAQdA,CAAK,CAACI,QAAN,CAAe,CACbD,CAAC,CAADA,CADa,CAEbN,KAAK,CAAEI,CAAK,CAAG,CAACD,CAAK,CAACH,KAAN,CAAY,CAAZ,CAAD,CAAiBA,CAAjB,CAAH,CAA6B,CAACA,CAAD,CAAQG,CAAK,CAACH,KAAN,CAAY,CAAZ,CAAR,CAF5B,CAAf,CARc,CAajB,CAdD,CADK,CAiBP,MAAO,IAAMQ,QAAO,CAAG,SAACC,CAAD,CAAiB,CACtC,GAAa,OAAT,GAAAA,CAAJ,CACE,MAAOA,EAEV,CAJM,CAMP,MAAO,IAAMC,oBAAmB,CAAG,SAACP,CAAD,CAAiC,OAC9DL,iBAAgB,CAACK,CAAD,CAD8C,CAEzDA,CAAK,CAACQ,GAFmD,CAI9DhB,aAAa,CAACQ,CAAD,CAJiD,CAKzDA,CAAK,CAACH,KAAN,CAAY,CAAZ,CALyD,OAOnE,CAPM,CASP,MAAO,IAAMY,kBAAiB,CAAG,SAACT,CAAD,CAAiC,OAC5DL,iBAAgB,CAACK,CAAD,CAD4C,CAEvDA,CAAK,CAACU,GAFiD,CAI5DlB,aAAa,CAACQ,CAAD,CAJ+C,CAKvDA,CAAK,CAACH,KAAN,CAAY,CAAZ,CALuD,OAOjE,CAPM"}