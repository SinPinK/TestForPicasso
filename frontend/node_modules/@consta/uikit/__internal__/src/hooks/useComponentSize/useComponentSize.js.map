{"version":3,"file":"useComponentSize.js","names":["useMemo","useResizeObserved","getElementSize","el","width","height","getBoundingClientRect","Math","floor","useComponentSize","ref","refs","current","componentSize"],"sources":["../../../../../src/hooks/useComponentSize/useComponentSize.tsx"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { useResizeObserved } from '../useResizeObserved/useResizeObserved';\n\nexport type ComponentSize = {\n  width: number;\n  height: number;\n};\n\nexport const getElementSize = (\n  el: HTMLElement | SVGGraphicsElement | null,\n): ComponentSize => {\n  if (!el) {\n    return { width: 0, height: 0 };\n  }\n\n  const { width, height } = el.getBoundingClientRect();\n\n  return {\n    width: Math.floor(width),\n    height: Math.floor(height),\n  };\n};\n\nexport function useComponentSize(\n  ref: React.RefObject<HTMLElement | SVGGraphicsElement>,\n): ComponentSize {\n  const refs = useMemo(\n    () => [ref],\n    // Если реф начал указывать на другой элемент, нужно обновить подписки\n    [ref.current],\n  );\n  const [componentSize] = useResizeObserved(refs, getElementSize);\n  return componentSize;\n}\n"],"mappings":"iEAAA,OAASA,OAAT,KAAwB,OAAxB,CAEA,OAASC,iBAAT,8CAOA,MAAO,IAAMC,eAAc,CAAG,SAC5BC,CAD4B,CAEV,CAClB,GAAI,CAACA,CAAL,CACE,MAAO,CAAEC,KAAK,CAAE,CAAT,CAAYC,MAAM,CAAE,CAApB,CAAP,CAGF,MAA0BF,CAAE,CAACG,qBAAH,EAA1B,CAAQF,CAAR,GAAQA,KAAR,CAAeC,CAAf,GAAeA,MAAf,CAEA,MAAO,CACLD,KAAK,CAAEG,IAAI,CAACC,KAAL,CAAWJ,CAAX,CADF,CAELC,MAAM,CAAEE,IAAI,CAACC,KAAL,CAAWH,CAAX,CAFH,CAIR,CAbM,CAeP,MAAO,SAASI,iBAAT,CACLC,CADK,CAEU,IACTC,EAAI,CAAGX,OAAO,CAClB,iBAAM,CAACU,CAAD,CAAN,CADkB,CAGlB,CAACA,CAAG,CAACE,OAAL,CAHkB,CADL,GAMSX,iBAAiB,CAACU,CAAD,CAAOT,cAAP,CAN1B,uBAMRW,CANQ,MAOf,MAAOA,EACR"}