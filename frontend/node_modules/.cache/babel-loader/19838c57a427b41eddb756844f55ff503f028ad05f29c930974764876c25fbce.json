{"ast":null,"code":"function _createForOfIteratorHelper(a, b) {\n  var c = \"undefined\" != typeof Symbol && a[Symbol.iterator] || a[\"@@iterator\"];\n  if (!c) {\n    if (Array.isArray(a) || (c = _unsupportedIterableToArray(a)) || b && a && \"number\" == typeof a.length) {\n      c && (a = c);\n      var d = 0,\n        e = function e() {};\n      return {\n        s: e,\n        n: function n() {\n          return d >= a.length ? {\n            done: !0\n          } : {\n            done: !1,\n            value: a[d++]\n          };\n        },\n        e: function e(a) {\n          throw a;\n        },\n        f: e\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var f,\n    g = !0,\n    h = !1;\n  return {\n    s: function s() {\n      c = c.call(a);\n    },\n    n: function n() {\n      var a = c.next();\n      return g = a.done, a;\n    },\n    e: function e(a) {\n      h = !0, f = a;\n    },\n    f: function f() {\n      try {\n        g || null == c[\"return\"] || c[\"return\"]();\n      } finally {\n        if (h) throw f;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(a, b) {\n  if (a) {\n    if (\"string\" == typeof a) return _arrayLikeToArray(a, b);\n    var c = Object.prototype.toString.call(a).slice(8, -1);\n    return \"Object\" === c && a.constructor && (c = a.constructor.name), \"Map\" === c || \"Set\" === c ? Array.from(a) : \"Arguments\" === c || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c) ? _arrayLikeToArray(a, b) : void 0;\n  }\n}\nfunction _arrayLikeToArray(a, b) {\n  (null == b || b > a.length) && (b = a.length);\n  for (var c = 0, d = Array(b); c < b; c++) d[c] = a[c];\n  return d;\n}\nimport { useMemo } from \"react\";\nimport { setRef } from \"../../utils/setRef\";\nexport function useForkRef(a) {\n  return useMemo(function () {\n    return 1 > a.length ? null : function (b) {\n      var c,\n        d = _createForOfIteratorHelper(a);\n      try {\n        for (d.s(); !(c = d.n()).done;) {\n          var e = c.value;\n          setRef(e, b);\n        }\n      } catch (a) {\n        d.e(a);\n      } finally {\n        d.f();\n      }\n    };\n  }, [a]);\n}","map":{"version":3,"names":["useMemo","setRef","useForkRef","a","length","b","c","d","_createForOfIteratorHelper","s","n","done","e","value","f"],"sources":["/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/node_modules/@consta/src/hooks/useForkRef/useForkRef.tsx"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { setRef } from '##/utils/setRef';\n\nexport function useForkRef<T>(\n  refs: (React.Ref<T> | undefined)[],\n): React.RefCallback<T> | null {\n  return useMemo(() => {\n    if (refs.length < 1) {\n      return null;\n    }\n    return (refValue) => {\n      for (const ref of refs) {\n        setRef(ref as React.MutableRefObject<T>, refValue);\n      }\n    };\n  }, [refs]);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,SAASC,MAAT;AAEA,OAAO,SAASC,UAATA,CACLC,CADK,EAEwB;EAC7B,OAAOH,OAAO,CAAC,YAAM;IAAA,OACD,CAAd,GAAAG,CAAI,CAACC,MADU,GAEV,IAFU,GAIZ,UAACC,CAAD,EAAc;MAAA,IAAAC,CAAA;QAAAC,CAAA,GAAAC,0BAAA,CACDL,CADC;MAAA;QACnB,KAAAI,CAAA,CAAAE,CAAA,MAAAH,CAAA,GAAAC,CAAA,CAAAG,CAAA,IAAAC,IAAA,GAAwB;UAAA,IAAbC,CAAa,GAAAN,CAAA,CAAAO,KAAA;UACtBZ,MAAM,CAACW,CAAD,EAAmCP,CAAnC,CACP;QAAA;MAHkB,SAAAF,CAAA;QAAAI,CAAA,CAAAK,CAAA,CAAAT,CAAA;MAAA;QAAAI,CAAA,CAAAO,CAAA;MAAA;IAIpB,CACF;EAAA,CATa,EASX,CAACX,CAAD,CATW,CAUf;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}