{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"controlRef\", \"size\", \"getOptionProps\", \"dropdownRef\", \"labelForCreate\", \"className\", \"labelForNotFound\", \"labelForEmptyItems\", \"hasItems\", \"form\", \"isOpen\", \"offset\", \"renderItem\", \"visibleItems\", \"isLoading\", \"getGroupLabel\", \"notFound\"];\nfunction ownKeys(a, b) {\n  var c = Object.keys(a);\n  if (Object.getOwnPropertySymbols) {\n    var d = Object.getOwnPropertySymbols(a);\n    b && (d = d.filter(function (b) {\n      return Object.getOwnPropertyDescriptor(a, b).enumerable;\n    })), c.push.apply(c, d);\n  }\n  return c;\n}\nfunction _objectSpread(a) {\n  for (var b, c = 1; c < arguments.length; c++) b = null == arguments[c] ? {} : arguments[c], c % 2 ? ownKeys(Object(b), !0).forEach(function (c) {\n    _defineProperty(a, c, b[c]);\n  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(a, Object.getOwnPropertyDescriptors(b)) : ownKeys(Object(b)).forEach(function (c) {\n    Object.defineProperty(a, c, Object.getOwnPropertyDescriptor(b, c));\n  });\n  return a;\n}\nimport \"./SelectDropdown.css\";\nimport React, { Fragment, useMemo, useRef } from \"react\";\nimport { Transition } from \"react-transition-group\";\nimport { cnListBox, ListItem, mapVerticalSpase } from \"../../ListCanary\";\nimport { cnMixSpace } from \"../../../mixs/MixSpace\";\nimport { isOptionForCreate, isOptionForSelectAll } from \"../../../hooks/useSelect/useSelect\";\nimport { animateTimeout, cnMixPopoverAnimate } from \"../../../mixs/MixPopoverAnimate/MixPopoverAnimate\";\nimport { cn } from \"../../../utils/bem\";\nimport { fabricIndex } from \"../../../utils/fabricIndex\";\nimport { Popover } from \"../../Popover/Popover\";\nimport { SelectCreateButton } from \"../SelectCreateButton/SelectCreateButton\";\nimport { SelectGroupLabel } from \"../SelectGroupLabel/SelectGroupLabel\";\nimport { SelectItemAll } from \"../SelectItemAll/SelectSelectAll\";\nimport { SelectLoader } from \"../SelectLoader/SelectLoader\";\nexport var selectDropdownform = [\"default\", \"brick\", \"round\"];\nexport var defaultSelectDropdownPropForm = selectDropdownform[0];\nvar cnSelectDropdown = cn(\"SelectDropdown\");\nexport var SelectDropdown = function SelectDropdown(a) {\n  var b = a.controlRef,\n    c = a.size,\n    d = a.getOptionProps,\n    e = a.dropdownRef,\n    f = a.labelForCreate,\n    g = a.className,\n    h = a.labelForNotFound,\n    i = a.labelForEmptyItems,\n    j = a.hasItems,\n    k = !(void 0 !== j) || j,\n    l = a.form,\n    m = a.isOpen,\n    n = a.offset,\n    o = void 0 === n ? \"none\" : n,\n    p = a.renderItem,\n    q = a.visibleItems,\n    r = a.isLoading,\n    s = a.getGroupLabel,\n    t = a.notFound,\n    u = _objectWithoutProperties(a, _excluded),\n    v = \"round\" === l ? \"increased\" : \"normal\",\n    w = useRef(null),\n    x = useMemo(function () {\n      return 0 < q.filter(function (a) {\n        return isOptionForCreate(a) || Array.isArray(a.items) && 0 < a.items.length;\n      }).length;\n    }, [q]),\n    y = \"none\" === o ? void 0 : o;\n  return React.createElement(Transition, {\n    in: m,\n    unmountOnExit: !0,\n    nodeRef: w,\n    timeout: animateTimeout\n  }, function (a) {\n    var j = fabricIndex(-1);\n    return React.createElement(Popover, Object.assign({}, u, {\n      anchorRef: b,\n      direction: \"downStartLeft\",\n      possibleDirections: [\"downStartLeft\", \"upStartLeft\", \"downStartRight\", \"upStartRight\"],\n      offset: y,\n      ref: w,\n      role: \"listbox\",\n      className: cnSelectDropdown(null, [cnListBox({\n        size: c,\n        form: l,\n        border: !0,\n        shadow: !0\n      }), cnMixPopoverAnimate({\n        animate: a\n      }), g]),\n      equalAnchorWidth: !0\n    }), React.createElement(\"div\", {\n      className: cnSelectDropdown(\"List\", [cnMixSpace({\n        pV: mapVerticalSpase[c]\n      })]),\n      ref: e\n    }, r && React.createElement(SelectLoader, {\n      mode: x ? \"blur\" : \"empty\"\n    }), q.map(function (a) {\n      return isOptionForCreate(a) ? React.createElement(SelectCreateButton, Object.assign({\n        size: c,\n        labelForCreate: f,\n        inputValue: a.label,\n        indent: v\n      }, d({\n        index: j(),\n        item: a\n      }))) : React.createElement(Fragment, {\n        key: a.key\n      }, a.group && s && React.createElement(SelectGroupLabel, {\n        label: s(a.group),\n        size: c,\n        indent: v\n      }), a.items.map(function (b, e) {\n        return isOptionForSelectAll(b) ? React.createElement(SelectItemAll, Object.assign({\n          indent: v,\n          size: c\n        }, d({\n          index: j(),\n          item: b\n        }), {\n          intermediate: !!(b.checkedCount && b.totalCount) && b.checkedCount !== b.totalCount,\n          checked: b.checkedCount === b.totalCount,\n          countItems: b.checkedCount,\n          total: b.totalCount\n        })) : React.createElement(Fragment, {\n          key: \"\".concat(a.key, \"-\").concat(e)\n        }, p(_objectSpread({\n          item: b\n        }, d({\n          index: j(),\n          item: b\n        }))));\n      }));\n    }), !r && k && t && h && React.createElement(ListItem, {\n      size: c,\n      label: h,\n      innerOffset: v\n    }, h), !r && !k && i && React.createElement(ListItem, {\n      size: c,\n      label: h,\n      innerOffset: v\n    }, i)));\n  });\n};","map":{"version":3,"names":["React","Fragment","useMemo","useRef","Transition","cnListBox","ListItem","mapVerticalSpase","cnMixSpace","isOptionForCreate","isOptionForSelectAll","animateTimeout","cnMixPopoverAnimate","cn","fabricIndex","Popover","SelectCreateButton","SelectGroupLabel","SelectItemAll","SelectLoader","selectDropdownform","defaultSelectDropdownPropForm","cnSelectDropdown","SelectDropdown","a","b","controlRef","c","size","d","getOptionProps","e","dropdownRef","f","labelForCreate","g","className","h","labelForNotFound","i","labelForEmptyItems","j","hasItems","k","l","form","m","isOpen","n","offset","o","p","renderItem","q","visibleItems","r","isLoading","s","getGroupLabel","t","notFound","u","_objectWithoutProperties","_excluded","v","w","x","filter","Array","isArray","items","length","y","createElement","in","unmountOnExit","nodeRef","timeout","Object","assign","anchorRef","direction","possibleDirections","ref","role","border","shadow","animate","equalAnchorWidth","pV","mode","map","inputValue","label","indent","index","item","key","group","intermediate","checkedCount","totalCount","checked","countItems","total","concat","_objectSpread","innerOffset"],"sources":["/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/node_modules/@consta/src/components/SelectComponents/SelectDropdown/SelectDropdown.tsx"],"sourcesContent":["import './SelectDropdown.css';\n\nimport React, { Fragment, useMemo, useRef } from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport {\n  cnListBox,\n  ListItem,\n  mapVerticalSpase,\n} from '##/components/ListCanary';\nimport { cnMixSpace } from '##/mixs/MixSpace';\nimport { SelectAllItem } from '##/utils/getGroups';\n\nimport {\n  GetOptionPropsResult,\n  isOptionForCreate,\n  isOptionForSelectAll,\n  OptionForCreate,\n  OptionProps,\n} from '../../../hooks/useSelect/useSelect';\nimport {\n  animateTimeout,\n  cnMixPopoverAnimate,\n} from '../../../mixs/MixPopoverAnimate/MixPopoverAnimate';\nimport { cn } from '../../../utils/bem';\nimport { fabricIndex } from '../../../utils/fabricIndex';\nimport { PropsWithJsxAttributes } from '../../../utils/types/PropsWithJsxAttributes';\nimport { Popover, PopoverPropOffset } from '../../Popover/Popover';\nimport { SelectCreateButton } from '../SelectCreateButton/SelectCreateButton';\nimport { SelectGroupLabel } from '../SelectGroupLabel/SelectGroupLabel';\nimport { SelectItemAll } from '../SelectItemAll/SelectSelectAll';\nimport { SelectLoader } from '../SelectLoader/SelectLoader';\nimport { PropSize, RenderItemProps } from '../types';\n\nexport const selectDropdownform = ['default', 'brick', 'round'] as const;\nexport type SelectDropdownPropForm = typeof selectDropdownform[number];\nexport const defaultSelectDropdownPropForm = selectDropdownform[0];\n\ntype Props<ITEM, GROUP> = PropsWithJsxAttributes<{\n  size: PropSize;\n  controlRef: React.MutableRefObject<HTMLDivElement | null>;\n  dropdownRef: React.Ref<HTMLDivElement>;\n  getOptionProps(props: OptionProps<ITEM>): GetOptionPropsResult;\n  form: SelectDropdownPropForm;\n  isOpen: boolean;\n  offset?: PopoverPropOffset | 'none';\n  isLoading?: boolean;\n  renderItem: (props: RenderItemProps<ITEM>) => JSX.Element | null;\n  visibleItems: (\n    | OptionForCreate\n    | {\n        items: Array<SelectAllItem | ITEM>;\n        key: string | number;\n        group?: GROUP;\n        groupIndex: number;\n        checkedCount?: number;\n        totalCount?: number;\n      }\n  )[];\n  getGroupLabel?: (group: GROUP) => string;\n  labelForCreate?: string;\n  labelForNotFound?: string;\n  labelForEmptyItems?: string;\n  notFound?: boolean;\n  hasItems?: boolean;\n}>;\n\ntype SelectDropdown = <ITEM, GROUP>(\n  props: Props<ITEM, GROUP>,\n) => React.ReactElement | null;\n\nconst cnSelectDropdown = cn('SelectDropdown');\n\nexport const SelectDropdown: SelectDropdown = (props) => {\n  const {\n    controlRef,\n    size,\n    getOptionProps,\n    dropdownRef,\n    labelForCreate,\n    className,\n    labelForNotFound,\n    labelForEmptyItems,\n    hasItems = true,\n    form,\n    isOpen,\n    offset: offsetProp = 'none',\n    renderItem,\n    visibleItems,\n    isLoading,\n    getGroupLabel,\n    notFound,\n    ...otherProps\n  } = props;\n\n  const indent = form === 'round' ? 'increased' : 'normal';\n\n  const popoverRef = useRef<HTMLDivElement>(null);\n\n  const isListShowed = useMemo(() => {\n    return (\n      visibleItems.filter(\n        (group) =>\n          isOptionForCreate(group) ||\n          (Array.isArray(group.items) && group.items.length > 0),\n      ).length > 0\n    );\n  }, [visibleItems]);\n\n  const offset = offsetProp === 'none' ? undefined : offsetProp;\n\n  return (\n    <Transition\n      in={isOpen}\n      unmountOnExit\n      nodeRef={popoverRef}\n      timeout={animateTimeout}\n    >\n      {(animate) => {\n        const getIndex = fabricIndex(-1);\n        return (\n          <Popover\n            {...otherProps}\n            anchorRef={controlRef}\n            direction=\"downStartLeft\"\n            possibleDirections={[\n              'downStartLeft',\n              'upStartLeft',\n              'downStartRight',\n              'upStartRight',\n            ]}\n            offset={offset}\n            ref={popoverRef}\n            role=\"listbox\"\n            className={cnSelectDropdown(null, [\n              cnListBox({ size, form, border: true, shadow: true }),\n              cnMixPopoverAnimate({ animate }),\n              className,\n            ])}\n            equalAnchorWidth\n          >\n            <div\n              className={cnSelectDropdown('List', [\n                cnMixSpace({\n                  pV: mapVerticalSpase[size],\n                }),\n              ])}\n              ref={dropdownRef}\n            >\n              {isLoading && (\n                <SelectLoader mode={isListShowed ? 'blur' : 'empty'} />\n              )}\n              {visibleItems.map((group) => {\n                if (isOptionForCreate(group)) {\n                  return (\n                    <SelectCreateButton\n                      size={size}\n                      labelForCreate={labelForCreate}\n                      inputValue={group.label}\n                      indent={indent}\n                      {...getOptionProps({ index: getIndex(), item: group })}\n                    />\n                  );\n                }\n                return (\n                  <Fragment key={group.key}>\n                    {group.group && getGroupLabel && (\n                      <SelectGroupLabel\n                        label={getGroupLabel(group.group)}\n                        size={size}\n                        indent={indent}\n                      />\n                    )}\n                    {group.items.map((item, i) => {\n                      if (isOptionForSelectAll(item)) {\n                        return (\n                          <SelectItemAll\n                            indent={indent}\n                            size={size}\n                            {...getOptionProps({ index: getIndex(), item })}\n                            intermediate={\n                              item.checkedCount && item.totalCount\n                                ? item.checkedCount !== item.totalCount\n                                : false\n                            }\n                            checked={item.checkedCount === item.totalCount}\n                            countItems={item.checkedCount}\n                            total={item.totalCount}\n                          />\n                        );\n                      }\n                      return (\n                        <Fragment key={`${group.key}-${i}`}>\n                          {renderItem({\n                            item,\n                            ...getOptionProps({ index: getIndex(), item }),\n                          })}\n                        </Fragment>\n                      );\n                    })}\n                  </Fragment>\n                );\n              })}\n              {!isLoading && hasItems && notFound && labelForNotFound && (\n                <ListItem\n                  size={size}\n                  label={labelForNotFound}\n                  innerOffset={indent}\n                >\n                  {labelForNotFound}\n                </ListItem>\n              )}\n              {!isLoading && !hasItems && labelForEmptyItems && (\n                <ListItem\n                  size={size}\n                  label={labelForNotFound}\n                  innerOffset={indent}\n                >\n                  {labelForEmptyItems}\n                </ListItem>\n              )}\n            </div>\n          </Popover>\n        );\n      }}\n    </Transition>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}