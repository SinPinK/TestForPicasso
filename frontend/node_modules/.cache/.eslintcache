[{"/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/index.js":"1","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/App.js":"2","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/reportWebVitals.js":"3","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/mainComponents/CustomNavbar.js":"4","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/mainComponents/CustomFooter.js":"5","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/components/InfoPage.js":"6","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/components/PostsPage.js":"7","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/components/HomePage.js":"8"},{"size":582,"mtime":1682582711074,"results":"9","hashOfConfig":"10"},{"size":1803,"mtime":1683881395778,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1682417705372,"results":"12","hashOfConfig":"10"},{"size":940,"mtime":1682498647378,"results":"13","hashOfConfig":"10"},{"size":278,"mtime":1682498744229,"results":"14","hashOfConfig":"10"},{"size":6369,"mtime":1683895656540,"results":"15","hashOfConfig":"10"},{"size":6237,"mtime":1683881322296,"results":"16","hashOfConfig":"10"},{"size":6828,"mtime":1683892672454,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"5sqihz",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/index.js",["48"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport PostsPage from './components/PostsPage'\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/App.js",["49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64"],[],"import logo from './logo.svg'\nimport './App.css'\nimport axios from 'axios'\nimport React, {useState, useEffect} from 'react'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\n\nimport { CustomNavbar } from './mainComponents/CustomNavbar'\nimport { CustomFooter } from './mainComponents/CustomFooter'\nimport { Container, Header, Content, Footer, Sidebar } from 'rsuite'\n\nimport { Theme, presetGpnDefault } from '@consta/uikit/Theme'\nimport { Card } from '@consta/uikit/Card'\nimport { Text } from '@consta/uikit/Text'\nimport { Button } from '@consta/uikit/Button'\nimport { Grid, GridItem } from '@consta/uikit/Grid'\n\nimport { PostsPage } from './components/PostsPage'\nimport { InfoPage } from './components/InfoPage'\nimport { HomePage } from './components/HomePage'\n\n\nfunction App() {\n    const [content, setContent] = useState([])\n    const [posts, setPosts] = useState([])\n\n    const [valueError, setValueError] = useState('')\n\n    return (\n        <Theme preset={presetGpnDefault}>\n            <div className=\"show-container\" >\n            <BrowserRouter>\n                <Container>\n                    <Header>\n                        <CustomNavbar/>\n                    </Header>\n                    <Content className='page-size' >\n\n                        <HomePage className='home-page' />\n                        <div>\n                            <Routes>\n                                <Route path='/postinfo/' element={<PostsPage/>}/>\n                                <Route path='/infopage/:id/' element={<InfoPage/>}/>\n                            </Routes>\n                        </div>\n\n                    </Content>\n                    <CustomFooter />\n                </Container>\n            </BrowserRouter>\n            </div>\n        </Theme>\n    )\n}\n\nexport default App;\n","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/reportWebVitals.js",[],[],"/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/mainComponents/CustomNavbar.js",["65","66","67"],[],"import 'rsuite/dist/rsuite.min.css'\nimport Navbar from 'rsuite/Navbar'\nimport Nav from 'rsuite/Nav'\nimport HomeIcon from '@rsuite/icons/legacy/Home'\nimport CogIcon from '@rsuite/icons/legacy/Cog'\n\nexport const CustomNavbar = () => {\n    return (\n        <Navbar className='navbar'>\n            <p><b> Posset hic esse navbar</b> </p>\n\n            {/*<Nav>\n              <Nav.Item icon={<HomeIcon />}>\n                Главная\n              </Nav.Item>\n              <Nav.Menu title=\"About\">\n                <Nav.Item>Company</Nav.Item>\n                <Nav.Item>Team</Nav.Item>\n                <Nav.Menu title=\"Contact\">\n                  <Nav.Item>Via email</Nav.Item>\n                  <Nav.Item>Via telephone</Nav.Item>\n                </Nav.Menu>\n              </Nav.Menu>\n            </Nav>\n            <Nav pullRight>\n              <Nav.Item icon={<CogIcon />}>Settings</Nav.Item>\n            </Nav>*/}\n        </Navbar>\n    )\n\n}","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/mainComponents/CustomFooter.js",[],[],"/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/components/InfoPage.js",["68","69","70","71","72","73"],[],"/*\nстраница для отображения подробной информации о посте:\n - тайтл поста\n - тело поста\n - инфо о пользователе\n - комментарии\n*/\nimport axios from 'axios'\nimport React, { useState, useEffect, Fragment } from 'react'\nimport { BrowserRouter, Link } from 'react-router-dom'\n\nimport { Card } from '@consta/uikit/Card'\nimport { Text } from '@consta/uikit/Text'\nimport { Button } from '@consta/uikit/Button'\nimport { Grid, GridItem } from '@consta/uikit/Grid'\nimport { IconBackward } from '@consta/icons/IconBackward'\nimport { IconCommentStroked } from '@consta/icons/IconCommentStroked'\nimport { Avatar } from '@consta/uikit/Avatar'\n\nexport const InfoPage = (props) => {\n    const [values, setValues] = useState([])\n    const [post, setPost] = useState([])\n    const [user, setUser] = useState([])\n    const [comments, setComments] = useState([])\n    const [commentsCount, setCommentsCount] = useState([])\n\n    //let id = document.location.pathname\n    const idP = props.idP\n\n    const [isCommentsShow, setIsCommentsShow] = useState(false)\n\n    const clickBack = (event) => {\n        event.preventDefault()\n        console.log(document.location.pathname)\n        window.location.assign('/')\n    }\n\n    const clickComments = (event) => {\n        event.preventDefault()\n        if (isCommentsShow === false) {\n            setIsCommentsShow(true)\n        } else {\n            setIsCommentsShow(false)\n        }\n    }\n\n    const testButton = (event) => {\n        //console.log(document.location.pathname)\n    }\n\n    useEffect(() => {\n        axios({\n            method: 'POST',\n            url: window.location.origin+'/api/postsview/',\n            data: idP,\n        }).then(response => {\n            //setValues(JSON.parse(response.data))\n            setPost(JSON.parse(response.data)['post'])\n            setUser(JSON.parse(response.data)['author'])\n            setComments(JSON.parse(response.data)['comments'])\n            setCommentsCount(JSON.parse(response.data)['comments_count'])\n            //console.log(JSON.parse(response.data)['comments_count'])\n        }).catch(error => {\n            console.log('error: ', error)\n        })\n    }, [])\n\n\n\n    return (\n        <div>\n            <Grid cols='12'>\n                <GridItem  col='12'>\n                {/*<Card className='info-card-size' >\n                */}\n                <Card className='post-preview-card-style' >\n                    <Grid cols='12'>\n                        <GridItem col='2'>\n                            <Button view='clear' onlyIcon iconLeft={IconBackward} onClick={(event) => clickBack(event)} />\n                        </GridItem>\n                    </Grid>\n                    <Grid cols='12'>\n                        <GridItem className='user-avatar-grid-info' col='1'>\n                            <Avatar name={user.name}/>\n                        </GridItem>\n                        <GridItem className='user-name-near-avatar' col='5'>\n                            <Text as='div' view='linkMinor' >\n                                {user.name}\n                                <Text view='ghost' as='span'>\n                                    {user.email}\n                                </Text>\n                            </Text>\n                        </GridItem>\n                    </Grid>\n                    <Grid cols='12'>\n                        <GridItem className='post-title-grid' col='12'>\n                            <Text view='linkMinor'>\n                                Theme: {post.title}\n                            </Text>\n                        </GridItem>\n                    </Grid>\n                    <Grid cols='12'>\n                        <GridItem className='post-body-grid' col='12'>\n                            <Text view='primary'>\n                                {post.body}\n                            </Text>\n                        </GridItem>\n                    </Grid>\n                    <Grid cols='12'>\n                        <GridItem col='2'>\n                            <Button view='clear' label={commentsCount} iconLeft={IconCommentStroked} onClick={(event) => clickComments(event)} />\n                        </GridItem>\n                    </Grid>\n                </Card>\n                </GridItem>\n            </Grid>\n            <Grid cols='12'>\n                <Card className='info-card-size' shadow={false} >\n\n                    {\n                        (isCommentsShow === true) && (\n                        <>\n                    {comments.map((comment, index) => (\n                        <Grid cols='12'>\n                            <Card className='comment-card-style'>\n                                <Grid col='12'>\n                                    <GridItem col='1' className='comment-author-avatar' >\n                                        <Avatar size='s' name={comment.email} />\n                                    </GridItem>\n                                    <GridItem col='4' className='comment-author-mail' >\n                                        <Text size='xs' view='link'>\n                                            {comment.email}\n                                        </Text>\n                                    </GridItem>\n                                </Grid>\n                                <Grid cols='12'>\n                                    <GridItem col='12' className='comment-title'>\n                                        <Text size='xs' view='primary'>\n                                            Theme: {comment.name}\n                                        </Text>\n                                    </GridItem>\n                                </Grid>\n                                <Grid cols='12'>\n                                    <GridItem col='12' className='comment-body'>\n                                        <Text size='xs' view='primary'>\n                                            {comment.body}\n                                        </Text>\n                                    </GridItem>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                    ))}\n                        </>\n                        )\n                    }\n                </Card>\n            </Grid>\n        </div>\n    )\n}","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/components/PostsPage.js",["74","75","76","77","78","79"],[],"/*\nстраница для отображения подробной информации о посте:\n - тайтл поста\n - тело поста\n - инфо о пользователе\n - комментарии\n*/\nimport axios from 'axios'\nimport React, { useState, useEffect, Fragment } from 'react'\nimport { BrowserRouter, Link } from 'react-router-dom'\n\nimport { Card } from '@consta/uikit/Card'\nimport { Text } from '@consta/uikit/Text'\nimport { Button } from '@consta/uikit/Button'\nimport { Grid, GridItem } from '@consta/uikit/Grid'\nimport { IconBackward } from '@consta/icons/IconBackward'\nimport { IconCommentStroked } from '@consta/icons/IconCommentStroked'\nimport { Avatar } from '@consta/uikit/Avatar'\n\nexport const PostsPage = (props) => {\n    const [values, setValues] = useState([])\n    const [post, setPost] = useState([])\n    const [user, setUser] = useState([])\n    const [comments, setComments] = useState([])\n    const [commentsCount, setCommentsCount] = useState([])\n\n    //let id = document.location.pathname\n    let id = props.id\n\n    const [isCommentsShow, setIsCommentsShow] = useState(false)\n\n    const clickBack = (event) => {\n        event.preventDefault()\n        //console.log(document.location.pathname)\n        window.location.assign('/')\n    }\n\n    const clickComments = (event) => {\n        event.preventDefault()\n        if (isCommentsShow === false) {\n            setIsCommentsShow(true)\n        } else {\n            setIsCommentsShow(false)\n        }\n    }\n\n    const testButton = (event) => {\n        //console.log(document.location.pathname)\n    }\n\n    useEffect(() => {\n        axios({\n            method: 'POST',\n            url: window.location.origin+'/api/postsview/',\n            data: id,\n        }).then(response => {\n            //setValues(JSON.parse(response.data))\n            setPost(JSON.parse(response.data)['post'])\n            setUser(JSON.parse(response.data)['author'])\n            setComments(JSON.parse(response.data)['comments'])\n            setCommentsCount(JSON.parse(response.data)['comments_count'])\n            //console.log(JSON.parse(response.data)['comments_count'])\n        }).catch(error => {\n            console.log('error: ', error)\n        })\n    }, [])\n\n\n\n    return (\n        <div>\n            <Grid cols='12'>\n                <GridItem className='main-card-position' col='12'>\n                {/*<Card className='info-card-size' >\n                */}\n                <Card className='post-preview-card-style' >\n                    <Grid cols='12'>\n                        <GridItem col='2'>\n                            <Button view='clear' onlyIcon iconLeft={IconBackward} onClick={(event) => clickBack(event)} />\n                        </GridItem>\n                    </Grid>\n                    <Grid cols='12'>\n                        <GridItem className='user-avatar-grid-info' col='1'>\n                            <Avatar name={user.name}/>\n                        </GridItem>\n                        <GridItem className='user-name-near-avatar' col='5'>\n                            <Text view='linkMinor' >\n                                {user.name}\n                            </Text>\n                        </GridItem>\n                    </Grid>\n                    <Grid cols='12'>\n                        <GridItem className='post-title-grid' col='12'>\n                            <Text view='linkMinor'>\n                                Theme: {post.title}\n                            </Text>\n                        </GridItem>\n                    </Grid>\n                    <Grid cols='12'>\n                        <GridItem className='post-body-grid' col='12'>\n                            <Text view='primary'>\n                                {post.body}\n                            </Text>\n                        </GridItem>\n                    </Grid>\n                    <Grid cols='12'>\n                        <GridItem col='2'>\n                            <Button view='clear' label={commentsCount} iconLeft={IconCommentStroked} onClick={(event) => clickComments(event)} />\n                        </GridItem>\n                    </Grid>\n                </Card>\n                </GridItem>\n            </Grid>\n            <Grid cols='12'>\n                <Card className='info-card-size' shadow={false} >\n\n                    {\n                        (isCommentsShow === true) && (\n                        <>\n                    {comments.map((comment, index) => (\n                        <Grid cols='12'>\n                            <Card className='comment-card-style'>\n                                <Grid col='12'>\n                                    <GridItem col='1' className='comment-author-avatar' >\n                                        <Avatar size='s' name={comment.email} />\n                                    </GridItem>\n                                    <GridItem col='4' className='comment-author-mail' >\n                                        <Text size='xs' view='link'>\n                                            {comment.email}\n                                        </Text>\n                                    </GridItem>\n                                </Grid>\n                                <Grid cols='12'>\n                                    <GridItem col='12' className='comment-title'>\n                                        <Text size='xs' view='primary'>\n                                            Theme: {comment.name}\n                                        </Text>\n                                    </GridItem>\n                                </Grid>\n                                <Grid cols='12'>\n                                    <GridItem col='12' className='comment-body'>\n                                        <Text size='xs' view='primary'>\n                                            {comment.body}\n                                        </Text>\n                                    </GridItem>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                    ))}\n                        </>\n                        )\n                    }\n                </Card>\n            </Grid>\n        </div>\n    )\n}","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/components/HomePage.js",["80","81","82","83"],[],"import axios from 'axios'\nimport React, { useState, useEffect, Fragment } from 'react'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport './Components.css' // импорт css-разметки\n\nimport { Grid, GridItem } from '@consta/uikit/Grid'\nimport { Text } from '@consta/uikit/Text'\nimport { Card } from '@consta/uikit/Card'\nimport { Select } from '@consta/uikit/Select'\nimport { Button } from '@consta/uikit/Button'\nimport { Avatar } from '@consta/uikit/Avatar'\nimport { Modal } from '@consta/uikit/Modal'\n\nimport { InfoPage } from './InfoPage'\n\n\nexport const HomePage = () => {\n    const [posts, setPosts] = useState([]) // переменная для хранения data по запросу /posts\n    const [users, setUsers] = useState([])\n    const [userItems, setUserItems] = useState([])\n    const [userValue, setUserValue] = useState([])\n    const [usersAndPosts, setUsersAndPosts] = useState([])\n    const [comments, setComments] = useState([])\n    const [postList, setPostList] = useState([])\n    const [idP, setIdP] = useState([])\n\n    const [isPostOpen, setIsPostOpen] = useState(false)\n    const [isClick, setIsClick] = useState(true)\n\n    const goToPosts = (event) => {\n        event.preventDefault()\n        window.location.assign('/postinfo/')\n    }\n\n    const clickOnPost = (event) => {\n        console.log(event.target.id)\n        setIdP(event.target.id)\n        //window.location.assign('/infopage/' + id + '/')\n        //setIsClick(true)\n        setIsPostOpen(true)\n    }\n\n    useEffect(() => {\n        axios({\n            method: 'GET',\n            url: window.location.origin+'/api/postsview/',\n        }).then(response => {\n            //console.log(JSON.parse(response.data))\n            //setContent(JSON.parse(response.data))\n            setPosts(JSON.parse(response.data)['posts'])\n            setUsers(JSON.parse(response.data)['users'])\n            setComments(JSON.parse(response.data)['comments'])\n            setUserItems(JSON.parse(response.data)['user_items'])\n            setUsersAndPosts(JSON.parse(response.data)['users_with_posts'])\n            setPostList(JSON.parse(response.data)['posts'])\n            //setIsClick(false)\n            //console.log(JSON.parse(response.data)['users_with_posts'])\n            //doPosts(JSON.parse(response.data))\n        }).catch(error => {\n            console.log(error)\n            //setPostsValueError('Quasi per errorem inciderunt')\n        })\n    }, [])\n\n    const postPosts = (event) => {\n        if (isClick === true) {\n            setIsClick(false)\n        } else {\n            setIsClick(true)\n        }\n    }\n\n    const onChangeSelectUser = (event) => {\n        setUserValue(event.value)\n        console.log(event.value['id'])\n        let id = Number(event.value['id'])\n        if (id === 0) {\n            setPostList(posts)\n        } else {\n            setPostList(usersAndPosts[id]['posts'])\n        }\n    }\n\n    return (\n        <div>\n            <Grid cols='12'>\n                <GridItem col='12'>\n                    <Card>\n                        <Grid cols='12'>\n                            <GridItem col='1' />\n                            <GridItem col='3'>\n                                <Select caption='Выберите пользователя' items={userItems} value={userValue} onChange={(event) => onChangeSelectUser(event)}/>\n                            </GridItem>\n                            <GridItem col='3'>\n                                <Button label='Отобразить посты' onClick={(event) => postPosts(event)} />\n                            </GridItem>\n                        </Grid>\n                    </Card>\n                </GridItem>\n            </Grid>\n            <Grid cols='12'>\n                <Modal className='post-modal' onClickOutside={() => setIsPostOpen(false)} isOpen={isPostOpen} onEsc={() => setIsPostOpen(false)} >\n                    <InfoPage idP={idP} />\n                </Modal>\n                <Card className='main-card-position' verticalSpace=\"s\" >\n                {\n                    (isClick === true) && (\n                    <>\n\n                            {postList.map((post, index) => (\n                            <Grid col='12'>\n\n                                    <Card className='post-preview-card-style' horizontalSpace='xl' >\n                                        <Grid cols='12' className='user-avatar-grid' >\n                                            <GridItem col='1'>\n                                                <Avatar name={post.username}/>\n                                            </GridItem>\n                                            <GridItem col='9' className='name-style-on-main-card' >\n                                                <Text as='div'>\n                                                    <Text view='linkMinor' as='span' size='m' >\n                                                        {post.username}&nbsp;\n                                                    </Text>\n                                                    <Text view='ghost' as='span' size='xs' >\n                                                        {post.email}\n                                                    </Text>\n                                                </Text>\n                                            </GridItem>\n\n                                        </Grid>\n                                        <Grid cols='12'>\n                                            <GridItem col='12' className='main-page-post-title'>\n                                                <Text as='div' view='linkMinor' >\n                                                    Theme:&nbsp;\n                                                    <Text view='link' as='span' cursor='pointer' id={post.id} onClick={(event) => clickOnPost(event)}>\n                                                        {post.title}\n                                                    </Text>\n                                                </Text>\n                                            </GridItem>\n                                        </Grid>\n                                        <Grid cols='12' className='truncate-text-grid-style' >\n                                            <GridItem col='6'>\n                                                <Text truncate view='primary'>\n                                                    {post.body}\n                                                </Text>\n                                            </GridItem>\n                                        </Grid>\n                                    </Card>\n                            </Grid>\n                            ))}\n                            </>\n                    )\n                }\n\n\n                </Card>\n            </Grid>\n        </div>\n    )\n\n}",{"ruleId":"84","severity":1,"message":"85","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":17},{"ruleId":"84","severity":1,"message":"88","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":12},{"ruleId":"84","severity":1,"message":"89","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":13},{"ruleId":"84","severity":1,"message":"90","line":4,"column":26,"nodeType":"86","messageId":"87","endLine":4,"endColumn":35},{"ruleId":"84","severity":1,"message":"91","line":9,"column":38,"nodeType":"86","messageId":"87","endLine":9,"endColumn":44},{"ruleId":"84","severity":1,"message":"92","line":9,"column":46,"nodeType":"86","messageId":"87","endLine":9,"endColumn":53},{"ruleId":"84","severity":1,"message":"93","line":12,"column":10,"nodeType":"86","messageId":"87","endLine":12,"endColumn":14},{"ruleId":"84","severity":1,"message":"94","line":13,"column":10,"nodeType":"86","messageId":"87","endLine":13,"endColumn":14},{"ruleId":"84","severity":1,"message":"95","line":14,"column":10,"nodeType":"86","messageId":"87","endLine":14,"endColumn":16},{"ruleId":"84","severity":1,"message":"96","line":15,"column":10,"nodeType":"86","messageId":"87","endLine":15,"endColumn":14},{"ruleId":"84","severity":1,"message":"97","line":15,"column":16,"nodeType":"86","messageId":"87","endLine":15,"endColumn":24},{"ruleId":"84","severity":1,"message":"98","line":23,"column":12,"nodeType":"86","messageId":"87","endLine":23,"endColumn":19},{"ruleId":"84","severity":1,"message":"99","line":23,"column":21,"nodeType":"86","messageId":"87","endLine":23,"endColumn":31},{"ruleId":"84","severity":1,"message":"100","line":24,"column":12,"nodeType":"86","messageId":"87","endLine":24,"endColumn":17},{"ruleId":"84","severity":1,"message":"101","line":24,"column":19,"nodeType":"86","messageId":"87","endLine":24,"endColumn":27},{"ruleId":"84","severity":1,"message":"102","line":26,"column":12,"nodeType":"86","messageId":"87","endLine":26,"endColumn":22},{"ruleId":"84","severity":1,"message":"103","line":26,"column":24,"nodeType":"86","messageId":"87","endLine":26,"endColumn":37},{"ruleId":"84","severity":1,"message":"104","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":11},{"ruleId":"84","severity":1,"message":"105","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":16},{"ruleId":"84","severity":1,"message":"106","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":15},{"ruleId":"84","severity":1,"message":"107","line":10,"column":10,"nodeType":"86","messageId":"87","endLine":10,"endColumn":23},{"ruleId":"84","severity":1,"message":"108","line":10,"column":25,"nodeType":"86","messageId":"87","endLine":10,"endColumn":29},{"ruleId":"84","severity":1,"message":"109","line":21,"column":12,"nodeType":"86","messageId":"87","endLine":21,"endColumn":18},{"ruleId":"84","severity":1,"message":"110","line":21,"column":20,"nodeType":"86","messageId":"87","endLine":21,"endColumn":29},{"ruleId":"84","severity":1,"message":"111","line":47,"column":11,"nodeType":"86","messageId":"87","endLine":47,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":66,"column":8,"nodeType":"114","endLine":66,"endColumn":10,"suggestions":"115"},{"ruleId":"84","severity":1,"message":"107","line":10,"column":10,"nodeType":"86","messageId":"87","endLine":10,"endColumn":23},{"ruleId":"84","severity":1,"message":"108","line":10,"column":25,"nodeType":"86","messageId":"87","endLine":10,"endColumn":29},{"ruleId":"84","severity":1,"message":"109","line":21,"column":12,"nodeType":"86","messageId":"87","endLine":21,"endColumn":18},{"ruleId":"84","severity":1,"message":"110","line":21,"column":20,"nodeType":"86","messageId":"87","endLine":21,"endColumn":29},{"ruleId":"84","severity":1,"message":"111","line":47,"column":11,"nodeType":"86","messageId":"87","endLine":47,"endColumn":21},{"ruleId":"112","severity":1,"message":"116","line":66,"column":8,"nodeType":"114","endLine":66,"endColumn":10,"suggestions":"117"},{"ruleId":"84","severity":1,"message":"107","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":23},{"ruleId":"84","severity":1,"message":"118","line":20,"column":12,"nodeType":"86","messageId":"87","endLine":20,"endColumn":17},{"ruleId":"84","severity":1,"message":"119","line":24,"column":12,"nodeType":"86","messageId":"87","endLine":24,"endColumn":20},{"ruleId":"84","severity":1,"message":"120","line":31,"column":11,"nodeType":"86","messageId":"87","endLine":31,"endColumn":20},"no-unused-vars","'PostsPage' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","'Footer' is defined but never used.","'Sidebar' is defined but never used.","'Card' is defined but never used.","'Text' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'GridItem' is defined but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'posts' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'valueError' is assigned a value but never used.","'setValueError' is assigned a value but never used.","'Nav' is defined but never used.","'HomeIcon' is defined but never used.","'CogIcon' is defined but never used.","'BrowserRouter' is defined but never used.","'Link' is defined but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'testButton' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'idP'. Either include it or remove the dependency array.","ArrayExpression",["121"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["122"],"'users' is assigned a value but never used.","'comments' is assigned a value but never used.","'goToPosts' is assigned a value but never used.",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [idP]",{"range":"127","text":"128"},"Update the dependencies array to be: [id]",{"range":"129","text":"130"},[2139,2141],"[idP]",[2137,2139],"[id]"]