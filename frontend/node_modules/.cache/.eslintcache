[{"/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/index.js":"1","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/App.js":"2","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/reportWebVitals.js":"3","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/mainComponents/CustomNavbar.js":"4","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/mainComponents/CustomFooter.js":"5","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/components/InfoPage.js":"6","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/components/PostsPage.js":"7","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/components/HomePage.js":"8"},{"size":582,"mtime":1682582711074,"results":"9","hashOfConfig":"10"},{"size":1784,"mtime":1682599922056,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1682417705372,"results":"12","hashOfConfig":"10"},{"size":940,"mtime":1682498647378,"results":"13","hashOfConfig":"10"},{"size":278,"mtime":1682498744229,"results":"14","hashOfConfig":"10"},{"size":1277,"mtime":1682602422675,"results":"15","hashOfConfig":"10"},{"size":2773,"mtime":1682596915688,"results":"16","hashOfConfig":"10"},{"size":3107,"mtime":1682599811314,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"5sqihz",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/index.js",["47"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport PostsPage from './components/PostsPage'\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/App.js",["48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63"],[],"import logo from './logo.svg'\nimport './App.css'\nimport axios from 'axios'\nimport React, {useState, useEffect} from 'react'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\n\nimport { CustomNavbar } from './mainComponents/CustomNavbar'\nimport { CustomFooter } from './mainComponents/CustomFooter'\nimport { Container, Header, Content, Footer, Sidebar } from 'rsuite'\n\nimport { Theme, presetGpnDefault } from '@consta/uikit/Theme'\nimport { Card } from '@consta/uikit/Card'\nimport { Text } from '@consta/uikit/Text'\nimport { Button } from '@consta/uikit/Button'\nimport { Grid, GridItem } from '@consta/uikit/Grid'\n\nimport { PostsPage } from './components/PostsPage'\nimport { InfoPage } from './components/InfoPage'\nimport { HomePage } from './components/HomePage'\n\n\nfunction App() {\n    const [content, setContent] = useState([])\n    const [posts, setPosts] = useState([])\n\n    const [valueError, setValueError] = useState('')\n\n    return (\n        <Theme preset={presetGpnDefault}>\n            <div className=\"show-container\" >\n            <BrowserRouter>\n                <Container>\n                    <Header>\n                        <CustomNavbar/>\n                    </Header>\n                    <Content className='main-container' >\n                        <HomePage/>\n                        <div>\n                            <Routes>\n                                <Route path='/postinfo/' element={<PostsPage/>}/>\n                                <Route path='/infopage/:id/' element={<InfoPage/>}/>\n                            </Routes>\n                        </div>\n\n                    </Content>\n                    <CustomFooter />\n                </Container>\n            </BrowserRouter>\n            </div>\n        </Theme>\n    )\n}\n\nexport default App;\n","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/reportWebVitals.js",[],[],"/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/mainComponents/CustomNavbar.js",["64","65","66"],[],"import 'rsuite/dist/rsuite.min.css'\nimport Navbar from 'rsuite/Navbar'\nimport Nav from 'rsuite/Nav'\nimport HomeIcon from '@rsuite/icons/legacy/Home'\nimport CogIcon from '@rsuite/icons/legacy/Cog'\n\nexport const CustomNavbar = () => {\n    return (\n        <Navbar className='navbar'>\n            <p><b> Posset hic esse navbar</b> </p>\n\n            {/*<Nav>\n              <Nav.Item icon={<HomeIcon />}>\n                Главная\n              </Nav.Item>\n              <Nav.Menu title=\"About\">\n                <Nav.Item>Company</Nav.Item>\n                <Nav.Item>Team</Nav.Item>\n                <Nav.Menu title=\"Contact\">\n                  <Nav.Item>Via email</Nav.Item>\n                  <Nav.Item>Via telephone</Nav.Item>\n                </Nav.Menu>\n              </Nav.Menu>\n            </Nav>\n            <Nav pullRight>\n              <Nav.Item icon={<CogIcon />}>Settings</Nav.Item>\n            </Nav>*/}\n        </Navbar>\n    )\n\n}","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/mainComponents/CustomFooter.js",[],[],"/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/components/InfoPage.js",["67","68","69","70","71","72","73"],[],"/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/components/PostsPage.js",["74","75","76","77","78"],[],"/*\nстраница с отображением карточек с превью постов\n*/\nimport axios from 'axios'\nimport React, { useState, useEffect, Fragment } from 'react'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport './Components.css' // импорт css-разметки\n\n// Элементы ui-библиотеки @consta uikit (система принадлежит ГПН, доступна вне корпоративной сети)\nimport { Card } from '@consta/uikit/Card'\nimport { Text } from '@consta/uikit/Text'\nimport { Button } from '@consta/uikit/Button'\nimport { Grid, GridItem } from '@consta/uikit/Grid'\n\nexport const PostsPage = () => {\n    const [value, setValue] = useState([])\n    const [posts, setPosts] = useState([]) // переменная для хранения data по запросу /posts\n    const [isClick, setIsClick] = useState(false)\n\n    const [postsValueError, setPostsValueError] = useState('') // Переменная для хранения информации об ошибке при запросе data\n\n    // для автоматического сбора data при открытии страницы\n    useEffect(() => {\n        axios({\n            method: 'GET',\n            url: window.location.origin+'/api/postsview/',\n        }).then(response => {\n            console.log(JSON.parse(response.data))\n            //setContent(JSON.parse(response.data))\n            setPosts(JSON.parse(response.data)['posts'])\n            //doPosts(JSON.parse(response.data))\n        }).catch(error => {\n            console.log(error)\n            setPostsValueError('Quasi per errorem inciderunt')\n        })\n    }, [])\n\n    const clickOnPost = (event) => {\n        console.log(event.target.id)\n        let id = event.target.id\n        window.location.assign('/infopage/' + id + '/')\n        setIsClick(true)\n    }\n\n    return (\n        <Fragment>\n            {\n                (isClick === false) && (\n                <div>\n            {posts.map((post, index) => (\n                <Grid col='12'>\n                    <Card className='post-preview-card-style' horizontalSpace='xl' >\n                        <Grid cols='12'>\n                            <GridItem col='12'>\n                            <Text view='link' cursor='pointer' id={post.id} onClick={(event) => clickOnPost(event)}>\n                                {post.title}\n                            </Text>\n                            </GridItem>\n                        </Grid>\n                    </Card>\n                </Grid>\n            ))}\n                </div>\n                )\n            }\n            <Grid cols='12'>\n                <Card className='non-shadow-card' shadow={false}/>\n            </Grid>\n        </Fragment>\n    )\n}","/Users/kateishutina/Desktop/тестовые/TestForPicasso/testForPicasso/frontend/src/components/HomePage.js",["79","80","81","82"],[],"import axios from 'axios'\nimport React, { useState, useEffect, Fragment } from 'react'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport './Components.css' // импорт css-разметки\n\nimport { Grid, GridItem } from '@consta/uikit/Grid'\nimport { Text } from '@consta/uikit/Text'\nimport { Card } from '@consta/uikit/Card'\nimport { Select } from '@consta/uikit/Select'\nimport { Button } from '@consta/uikit/Button'\n\n\nexport const HomePage = () => {\n    const [posts, setPosts] = useState([]) // переменная для хранения data по запросу /posts\n    const [isClick, setIsClick] = useState(true)\n\n    const goToPosts = (event) => {\n        event.preventDefault()\n        window.location.assign('/postinfo/')\n    }\n\n    const clickOnPost = (event) => {\n        console.log(event.target.id)\n        let id = event.target.id\n        window.location.assign('/infopage/' + id + '/')\n        setIsClick(true)\n    }\n\n    useEffect(() => {\n        axios({\n            method: 'GET',\n            url: window.location.origin+'/api/postsview/',\n        }).then(response => {\n            console.log(JSON.parse(response.data))\n            //setContent(JSON.parse(response.data))\n            setPosts(JSON.parse(response.data)['posts'])\n            //doPosts(JSON.parse(response.data))\n        }).catch(error => {\n            console.log(error)\n            //setPostsValueError('Quasi per errorem inciderunt')\n        })\n    }, [])\n\n    const postPosts = (event) => {\n        if (isClick === true) {\n            setIsClick(false)\n        } else {\n            setIsClick(true)\n        }\n    }\n\n    return (\n        <div>\n            <Grid cols='12'>\n                <GridItem col='12'>\n                    <Card>\n                        <Grid cols='12'>\n                            <GridItem col='1' />\n                            <GridItem col='3'>\n                                <Text> Здесь будет select </Text>\n                            </GridItem>\n                            <GridItem col='3'>\n                                <Button label='Отобразить посты' onClick={(event) => postPosts(event)} />\n                            </GridItem>\n                        </Grid>\n                    </Card>\n                </GridItem>\n            </Grid>\n            <Grid cols='12'>\n\n                    {\n                (isClick === false) && (\n                <div>\n            {posts.map((post, index) => (\n                <Grid col='12'>\n                    <Card className='post-preview-card-style' horizontalSpace='xl' >\n                        <Grid cols='12'>\n                            <GridItem col='12'>\n                            <Text view='link' cursor='pointer' id={post.id} onClick={(event) => clickOnPost(event)}>\n                                {post.title}\n                            </Text>\n                            </GridItem>\n                        </Grid>\n                    </Card>\n                </Grid>\n            ))}\n                </div>\n                )\n            }\n\n            </Grid>\n        </div>\n    )\n\n}",{"ruleId":"83","severity":1,"message":"84","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":17},{"ruleId":"83","severity":1,"message":"87","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":12},{"ruleId":"83","severity":1,"message":"88","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":13},{"ruleId":"83","severity":1,"message":"89","line":4,"column":26,"nodeType":"85","messageId":"86","endLine":4,"endColumn":35},{"ruleId":"83","severity":1,"message":"90","line":9,"column":38,"nodeType":"85","messageId":"86","endLine":9,"endColumn":44},{"ruleId":"83","severity":1,"message":"91","line":9,"column":46,"nodeType":"85","messageId":"86","endLine":9,"endColumn":53},{"ruleId":"83","severity":1,"message":"92","line":12,"column":10,"nodeType":"85","messageId":"86","endLine":12,"endColumn":14},{"ruleId":"83","severity":1,"message":"93","line":13,"column":10,"nodeType":"85","messageId":"86","endLine":13,"endColumn":14},{"ruleId":"83","severity":1,"message":"94","line":14,"column":10,"nodeType":"85","messageId":"86","endLine":14,"endColumn":16},{"ruleId":"83","severity":1,"message":"95","line":15,"column":10,"nodeType":"85","messageId":"86","endLine":15,"endColumn":14},{"ruleId":"83","severity":1,"message":"96","line":15,"column":16,"nodeType":"85","messageId":"86","endLine":15,"endColumn":24},{"ruleId":"83","severity":1,"message":"97","line":23,"column":12,"nodeType":"85","messageId":"86","endLine":23,"endColumn":19},{"ruleId":"83","severity":1,"message":"98","line":23,"column":21,"nodeType":"85","messageId":"86","endLine":23,"endColumn":31},{"ruleId":"83","severity":1,"message":"99","line":24,"column":12,"nodeType":"85","messageId":"86","endLine":24,"endColumn":17},{"ruleId":"83","severity":1,"message":"100","line":24,"column":19,"nodeType":"85","messageId":"86","endLine":24,"endColumn":27},{"ruleId":"83","severity":1,"message":"101","line":26,"column":12,"nodeType":"85","messageId":"86","endLine":26,"endColumn":22},{"ruleId":"83","severity":1,"message":"102","line":26,"column":24,"nodeType":"85","messageId":"86","endLine":26,"endColumn":37},{"ruleId":"83","severity":1,"message":"103","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":11},{"ruleId":"83","severity":1,"message":"104","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":16},{"ruleId":"83","severity":1,"message":"105","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":15},{"ruleId":"83","severity":1,"message":"88","line":8,"column":8,"nodeType":"85","messageId":"86","endLine":8,"endColumn":13},{"ruleId":"83","severity":1,"message":"89","line":9,"column":26,"nodeType":"85","messageId":"86","endLine":9,"endColumn":35},{"ruleId":"83","severity":1,"message":"106","line":10,"column":10,"nodeType":"85","messageId":"86","endLine":10,"endColumn":23},{"ruleId":"83","severity":1,"message":"107","line":10,"column":25,"nodeType":"85","messageId":"86","endLine":10,"endColumn":29},{"ruleId":"83","severity":1,"message":"93","line":13,"column":10,"nodeType":"85","messageId":"86","endLine":13,"endColumn":14},{"ruleId":"83","severity":1,"message":"108","line":19,"column":12,"nodeType":"85","messageId":"86","endLine":19,"endColumn":17},{"ruleId":"83","severity":1,"message":"109","line":19,"column":19,"nodeType":"85","messageId":"86","endLine":19,"endColumn":27},{"ruleId":"83","severity":1,"message":"106","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":23},{"ruleId":"83","severity":1,"message":"94","line":13,"column":10,"nodeType":"85","messageId":"86","endLine":13,"endColumn":16},{"ruleId":"83","severity":1,"message":"108","line":17,"column":12,"nodeType":"85","messageId":"86","endLine":17,"endColumn":17},{"ruleId":"83","severity":1,"message":"109","line":17,"column":19,"nodeType":"85","messageId":"86","endLine":17,"endColumn":27},{"ruleId":"83","severity":1,"message":"110","line":21,"column":12,"nodeType":"85","messageId":"86","endLine":21,"endColumn":27},{"ruleId":"83","severity":1,"message":"111","line":2,"column":38,"nodeType":"85","messageId":"86","endLine":2,"endColumn":46},{"ruleId":"83","severity":1,"message":"106","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":23},{"ruleId":"83","severity":1,"message":"112","line":10,"column":10,"nodeType":"85","messageId":"86","endLine":10,"endColumn":16},{"ruleId":"83","severity":1,"message":"113","line":18,"column":11,"nodeType":"85","messageId":"86","endLine":18,"endColumn":20},"no-unused-vars","'PostsPage' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","'Footer' is defined but never used.","'Sidebar' is defined but never used.","'Card' is defined but never used.","'Text' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'GridItem' is defined but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'posts' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'valueError' is assigned a value but never used.","'setValueError' is assigned a value but never used.","'Nav' is defined but never used.","'HomeIcon' is defined but never used.","'CogIcon' is defined but never used.","'BrowserRouter' is defined but never used.","'Link' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'postsValueError' is assigned a value but never used.","'Fragment' is defined but never used.","'Select' is defined but never used.","'goToPosts' is assigned a value but never used."]